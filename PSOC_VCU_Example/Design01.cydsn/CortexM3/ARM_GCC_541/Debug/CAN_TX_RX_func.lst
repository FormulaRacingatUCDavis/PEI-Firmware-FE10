ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CAN_TX_RX_func.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CAN_SendMsg,"ax",%progbits
  20              		.align	2
  21              		.global	CAN_SendMsg
  22              		.thumb
  23              		.thumb_func
  24              		.type	CAN_SendMsg, %function
  25              	CAN_SendMsg:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\CAN_TX_RX_func.c"
   1:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * File Name: CAN_TX_RX_func.c
   3:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Version 3.0
   4:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
   5:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Description:
   6:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  There are functions process "Full" Receive and Transmit mailboxes:
   7:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_SendMsg0-7();
   8:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg0-15();
   9:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  Transmission of message, and receive routine for "Basic" mailboxes:
  10:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_SendMsg();
  11:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_TxCancel();
  12:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg();
  13:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  14:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  Note:
  15:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *   None
  16:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  17:Generated_Source\PSoC5/CAN_TX_RX_func.c **** ********************************************************************************
  18:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *******************************************************************************/
  23:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  24:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #include "CAN.h"
  25:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #include "cyapicallbacks.h"
  26:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  27:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /* `#START TX_RX_FUNCTION` */
  28:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  29:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /* `#END` */
  30:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 2


  31:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  32:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /*******************************************************************************
  33:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_SendMsg
  34:Generated_Source\PSoC5/CAN_TX_RX_func.c **** ********************************************************************************
  35:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  36:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Summary:
  37:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  This function is Send Message from one of Basic mailboxes. The function loops
  38:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  through the transmit message buffer designed as Basic CAN mailboxes for the
  39:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  first free available and sends from it. The number of retries is limited.
  40:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  41:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Parameters:
  42:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  message: The pointer to a structure that contains all required data to send
  43:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *           messages.
  44:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  45:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Return:
  46:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  Indication if message has been sent.
  47:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *   Define                             Description
  48:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *    CYRET_SUCCESS                      The function passed successfully
  49:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *    CAN_FAIL              The function failed
  50:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  51:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *******************************************************************************/
  52:Generated_Source\PSoC5/CAN_TX_RX_func.c **** uint8 CAN_SendMsg(const CAN_TX_MSG *message) 
  53:Generated_Source\PSoC5/CAN_TX_RX_func.c **** {
  28              		.loc 1 53 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40              	.LVL1:
  54:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 i, j, shift;
  55:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 retry = 0u;
  56:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  41              		.loc 1 56 0
  42 0002 0122     		movs	r2, #1
  55:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  43              		.loc 1 55 0
  44 0004 0027     		movs	r7, #0
  57:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint32 regTemp;
  58:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  59:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     while (retry < CAN_RETRY_NUMBER)
  45              		.loc 1 59 0
  46 0006 5AE0     		b	.L2
  47              	.LVL2:
  48              	.L16:
  60:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
  61:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         shift = 1u;    /* Start from first mailbox */
  62:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         for (i = 0u; i < CAN_NUMBER_OF_TX_MAILBOXES; i++)
  63:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
  64:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             /* Find Basic TX mailboxes */
  65:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_MAILBOX_TYPE & shift) == 0u)
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 3


  66:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
  67:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* Find free mailbox */
  68:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #if (CY_PSOC3 || CY_PSOC5)
  69:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG.byte[2] & shift) == 0u)
  49              		.loc 1 69 0
  50 0008 2F4B     		ldr	r3, .L22
  51 000a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
  52 000c 3342     		tst	r3, r6
  53 000e 49D1     		bne	.L3
  54              	.LVL3:
  70:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #else  /* CY_PSOC4 */
  71:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG &
  72:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         (uint32) ((uint32) shift << CAN_TWO_BYTE_OFFSET)) == 0u)
  73:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CY_PSOC3 || CY_PSOC5 */
  74:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     {
  75:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         regTemp = 0u;
  76:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  77:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         /* Set message parameters */
  78:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         if (message->rtr != CAN_STANDARD_MESSAGE)
  55              		.loc 1 78 0
  56 0010 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  57 0012 0BB1     		cbz	r3, .L4
  79:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  80:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp = CAN_TX_RTR_MASK;    /* RTR message Enable */
  58              		.loc 1 80 0
  59 0014 4FF40013 		mov	r3, #2097152
  60              	.L4:
  61              	.LVL4:
  81:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
  82:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  83:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         if (message->ide == CAN_STANDARD_MESSAGE)
  62              		.loc 1 83 0
  63 0018 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
  64              	.LVL5:
  65 001a 32B9     		cbnz	r2, .L5
  84:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  85:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_STANDARD_MSG(i, message->id);
  66              		.loc 1 85 0
  67 001c 2B4A     		ldr	r2, .L22+4
  68 001e 02EB0412 		add	r2, r2, r4, lsl #4
  69 0022 0168     		ldr	r1, [r0]
  70 0024 4905     		lsls	r1, r1, #21
  71 0026 5160     		str	r1, [r2, #4]
  72 0028 07E0     		b	.L6
  73              	.L5:
  86:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
  87:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         else
  88:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  89:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_IDE_MASK;
  74              		.loc 1 89 0
  75 002a 43F48013 		orr	r3, r3, #1048576
  76              	.LVL6:
  90:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_EXTENDED_MSG(i, message->id);
  77              		.loc 1 90 0
  78 002e 274A     		ldr	r2, .L22+4
  79 0030 02EB0412 		add	r2, r2, r4, lsl #4
  80 0034 0168     		ldr	r1, [r0]
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 4


  81 0036 C900     		lsls	r1, r1, #3
  82 0038 5160     		str	r1, [r2, #4]
  83              	.L6:
  91:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
  92:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  93:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         if (message->dlc < CAN_TX_DLC_MAX_VALUE)
  84              		.loc 1 93 0
  85 003a 90F806E0 		ldrb	lr, [r0, #6]	@ zero_extendqisi2
  86 003e BEF1070F 		cmp	lr, #7
  87 0042 02D8     		bhi	.L7
  94:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  95:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp |= ((uint32) message->dlc) << CAN_TWO_BYTE_OFFSET;
  88              		.loc 1 95 0
  89 0044 43EA0E4E 		orr	lr, r3, lr, lsl #16
  90              	.LVL7:
  91 0048 01E0     		b	.L8
  92              	.LVL8:
  93              	.L7:
  96:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
  97:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         else
  98:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  99:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_DLC_UPPER_VALUE;
  94              		.loc 1 99 0
  95 004a 43F4002E 		orr	lr, r3, #524288
  96              	.LVL9:
  97              	.L8:
 100:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
 101:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 102:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         if (message->irq != CAN_TRANSMIT_INT_DISABLE)
  98              		.loc 1 102 0
  99 004e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 100 0050 0BB1     		cbz	r3, .L9
 103:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 104:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_INT_ENABLE_MASK;    /* Transmit Interrupt Enable */
 101              		.loc 1 104 0
 102 0052 4EF0040E 		orr	lr, lr, #4
 103              	.LVL10:
 104              	.L9:
 105:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
 106:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 107:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         for (j = 0u; (j < message->dlc) && (j < CAN_TX_DLC_MAX_VALUE); j++)
 105              		.loc 1 107 0
 106 0056 0023     		movs	r3, #0
 107 0058 0FE0     		b	.L10
 108              	.LVL11:
 109              	.L14:
 108:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 109:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             #if (CY_PSOC3 || CY_PSOC5)
 110:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j) = message->msg->byte[j];
 110              		.loc 1 110 0
 111 005a 1C4A     		ldr	r2, .L22+4
 112 005c 02EB0411 		add	r1, r2, r4, lsl #4
 113 0060 032B     		cmp	r3, #3
 114 0062 02D9     		bls	.L11
 115              		.loc 1 110 0 is_stmt 0 discriminator 1
 116 0064 C3F10B02 		rsb	r2, r3, #11
 117 0068 01E0     		b	.L12
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 5


 118              	.L11:
 119              		.loc 1 110 0 discriminator 2
 120 006a C3F10302 		rsb	r2, r3, #3
 121              	.L12:
 122              		.loc 1 110 0 discriminator 4
 123 006e 8568     		ldr	r5, [r0, #8]
 124 0070 ED5C     		ldrb	r5, [r5, r3]	@ zero_extendqisi2
 125 0072 0A44     		add	r2, r2, r1
 126 0074 1572     		strb	r5, [r2, #8]
 107:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 127              		.loc 1 107 0 is_stmt 1 discriminator 4
 128 0076 0133     		adds	r3, r3, #1
 129              	.LVL12:
 130 0078 DBB2     		uxtb	r3, r3
 131              	.LVL13:
 132              	.L10:
 107:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 133              		.loc 1 107 0 is_stmt 0 discriminator 2
 134 007a 8279     		ldrb	r2, [r0, #6]	@ zero_extendqisi2
 135 007c 9342     		cmp	r3, r2
 136 007e 01D2     		bcs	.L13
 107:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 137              		.loc 1 107 0 discriminator 3
 138 0080 072B     		cmp	r3, #7
 139 0082 EAD9     		bls	.L14
 140              	.L13:
 111:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             #else /* CY_PSOC4 */
 112:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j, message->msg->byte[j]);
 113:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             #endif /* CY_PSOC3 || CY_PSOC5 */
 114:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
 115:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 116:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         /* Disable isr */
 117:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     CyIntDisable(CAN_ISR_NUMBER);
 141              		.loc 1 117 0 is_stmt 1
 142 0084 4FF48031 		mov	r1, #65536
 143 0088 114B     		ldr	r3, .L22+8
 144              	.LVL14:
 145 008a 1960     		str	r1, [r3]
 118:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 119:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         /* WPN[23] and WPN[3] set to 1 for write to CAN Control reg */
 120:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         CY_SET_REG32(CAN_TX_CMD_PTR(i), (regTemp | CAN_TX_WPN_SET));
 146              		.loc 1 120 0
 147 008c 2201     		lsls	r2, r4, #4
 148 008e 0F4D     		ldr	r5, .L22+4
 149 0090 4EF40003 		orr	r3, lr, #8388608
 150 0094 43F00803 		orr	r3, r3, #8
 151 0098 5351     		str	r3, [r2, r5]
 121:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 122:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         #if (CY_PSOC3 || CY_PSOC5)
 123:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             CY_SET_REG32(CAN_TX_CMD_PTR(i), CAN_SEND_MESSAGE);
 152              		.loc 1 123 0
 153 009a 0123     		movs	r3, #1
 154 009c 5351     		str	r3, [r2, r5]
 124:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         #else /* CY_PSOC4 */
 125:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             if (message->sst != CAN_STANDARD_MESSAGE)
 126:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             {
 127:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 /* Single Shot Transmission */
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 6


 128:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE |
 129:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_ABORT_MASK;
 130:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             }
 131:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             else
 132:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             {
 133:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE;
 134:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             }
 135:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         #endif /* CY_PSOC3 || CY_PSOC5 */
 136:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 137:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         /* Enable isr */
 138:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     CyIntEnable(CAN_ISR_NUMBER);
 155              		.loc 1 138 0
 156 009e 0D4B     		ldr	r3, .L22+12
 157 00a0 1960     		str	r1, [r3]
 158              	.LVL15:
 139:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 140:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         result = CYRET_SUCCESS;
 159              		.loc 1 140 0
 160 00a2 0022     		movs	r2, #0
 161              	.LVL16:
 162              	.L3:
 141:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     }
 142:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 143:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             shift <<= 1u;
 163              		.loc 1 143 0
 164 00a4 7600     		lsls	r6, r6, #1
 165              	.LVL17:
 166 00a6 F6B2     		uxtb	r6, r6
 167              	.LVL18:
 144:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if (result == CYRET_SUCCESS)
 168              		.loc 1 144 0
 169 00a8 32B1     		cbz	r2, .L15
  62:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 170              		.loc 1 62 0 discriminator 2
 171 00aa 0134     		adds	r4, r4, #1
 172              	.LVL19:
 173 00ac E4B2     		uxtb	r4, r4
 174              	.LVL20:
 175 00ae 01E0     		b	.L18
 176              	.LVL21:
 177              	.L20:
 178 00b0 0126     		movs	r6, #1
 179 00b2 0024     		movs	r4, #0
 180              	.L18:
 181              	.LVL22:
  62:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 182              		.loc 1 62 0 is_stmt 0 discriminator 1
 183 00b4 072C     		cmp	r4, #7
 184 00b6 A7D9     		bls	.L16
 185              	.L15:
 145:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 146:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 break;
 147:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 148:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         }
 149:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         if (result == CYRET_SUCCESS)
 186              		.loc 1 149 0 is_stmt 1
 187 00b8 1AB1     		cbz	r2, .L17
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 7


 150:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 151:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             break;
 152:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         }
 153:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         else
 154:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 155:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             retry++;
 188              		.loc 1 155 0
 189 00ba 0137     		adds	r7, r7, #1
 190              	.LVL23:
 191 00bc FFB2     		uxtb	r7, r7
 192              	.LVL24:
 193              	.L2:
  59:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 194              		.loc 1 59 0
 195 00be 022F     		cmp	r7, #2
 196 00c0 F6D9     		bls	.L20
 197              	.L17:
 156:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         }
 157:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 158:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 159:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     return (result);
 160:Generated_Source\PSoC5/CAN_TX_RX_func.c **** }
 198              		.loc 1 160 0
 199 00c2 1046     		mov	r0, r2
 200              	.LVL25:
 201 00c4 F0BD     		pop	{r4, r5, r6, r7, pc}
 202              	.LVL26:
 203              	.L23:
 204 00c6 00BF     		.align	2
 205              	.L22:
 206 00c8 08A00040 		.word	1073782792
 207 00cc 20A00040 		.word	1073782816
 208 00d0 80E100E0 		.word	-536813184
 209 00d4 00E100E0 		.word	-536813312
 210              		.cfi_endproc
 211              	.LFE0:
 212              		.size	CAN_SendMsg, .-CAN_SendMsg
 213              		.section	.text.CAN_TxCancel,"ax",%progbits
 214              		.align	2
 215              		.global	CAN_TxCancel
 216              		.thumb
 217              		.thumb_func
 218              		.type	CAN_TxCancel, %function
 219              	CAN_TxCancel:
 220              	.LFB1:
 161:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 162:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 163:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_TxCancel
 165:Generated_Source\PSoC5/CAN_TX_RX_func.c **** ********************************************************************************
 166:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 167:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Summary:
 168:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  This function cancels transmission of a message that has been queued to be
 169:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  transmitted. Values between 0 and 7 are valid.
 170:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 171:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Parameters:
 172:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  bufferId: The mailbox number.
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 8


 173:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 174:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Return:
 175:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  None.
 176:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 177:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *******************************************************************************/
 178:Generated_Source\PSoC5/CAN_TX_RX_func.c **** void CAN_TxCancel(uint8 bufferId) 
 179:Generated_Source\PSoC5/CAN_TX_RX_func.c **** {
 221              		.loc 1 179 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226              	.LVL27:
 180:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     if (bufferId < CAN_NUMBER_OF_TX_MAILBOXES)
 227              		.loc 1 180 0
 228 0000 0728     		cmp	r0, #7
 229 0002 07D8     		bhi	.L24
 181:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 182:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         CAN_TX_ABORT_MESSAGE(bufferId);
 230              		.loc 1 182 0
 231 0004 0001     		lsls	r0, r0, #4
 232              	.LVL28:
 233 0006 044A     		ldr	r2, .L26
 234 0008 835C     		ldrb	r3, [r0, r2]	@ zero_extendqisi2
 235 000a 03F0FC03 		and	r3, r3, #252
 236 000e 43F00203 		orr	r3, r3, #2
 237 0012 8354     		strb	r3, [r0, r2]
 238              	.L24:
 239 0014 7047     		bx	lr
 240              	.L27:
 241 0016 00BF     		.align	2
 242              	.L26:
 243 0018 20A00040 		.word	1073782816
 244              		.cfi_endproc
 245              	.LFE1:
 246              		.size	CAN_TxCancel, .-CAN_TxCancel
 247              		.section	.text.CAN_ReceiveMsg,"ax",%progbits
 248              		.align	2
 249              		.global	CAN_ReceiveMsg
 250              		.thumb
 251              		.thumb_func
 252              		.type	CAN_ReceiveMsg, %function
 253              	CAN_ReceiveMsg:
 254              	.LFB2:
 183:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 184:Generated_Source\PSoC5/CAN_TX_RX_func.c **** }
 185:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 186:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 187:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX0_FUNC_ENABLE)
 188:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 189:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg0
 190:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 191:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 192:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 193:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 0. The function checks
 194:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 0 doesn't already have un-transmitted messages waiting for
 195:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 9


 196:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 197:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 198:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 199:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 200:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 201:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 202:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 203:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 204:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 205:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 206:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 207:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 208:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg0(void) 
 209:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 210:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 211:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 212:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 213:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[0u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 214:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 215:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(0u) & CAN_TX_REQUEST_PENDING) != 0u)
 216:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 217:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 218:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 219:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 220:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 221:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 222:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_0_TRASMITTED` */
 223:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 224:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 225:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 226:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_0_CALLBACK
 227:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_0_Callback();
 228:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_0_CALLBACK */
 229:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 230:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(0u),
 231:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(0u)) | CAN_SEND_MESSAGE);
 232:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 233:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 234:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 235:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 236:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX0_FUNC_ENABLE */
 237:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 238:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 239:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX1_FUNC_ENABLE)
 240:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 241:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg1
 242:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 243:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 244:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 245:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 1. The function checks
 246:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 1 doesn't already have un-transmitted messages waiting for
 247:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 248:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 249:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 250:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 251:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 252:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 10


 253:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 254:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 255:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 256:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 257:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 258:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 259:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 260:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg1(void) 
 261:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 262:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 263:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 264:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 265:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[1u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 266:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 267:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(1u) & CAN_TX_REQUEST_PENDING) != 0u)
 268:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 269:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 270:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 271:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 272:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 273:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 274:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_1_TRASMITTED` */
 275:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 276:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 277:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 278:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_1_CALLBACK
 279:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_1_Callback();
 280:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_1_CALLBACK */
 281:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 282:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(1u),
 283:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(1u)) | CAN_SEND_MESSAGE);
 284:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 285:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 286:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 287:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 288:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX1_FUNC_ENABLE */
 289:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 290:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 291:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX2_FUNC_ENABLE)
 292:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 293:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg2
 294:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 295:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 296:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 297:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 2. The function checks
 298:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 2 doesn't already have un-transmitted messages waiting for
 299:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 300:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 301:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 302:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 303:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 304:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 305:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 306:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 307:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 308:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 309:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 11


 310:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 311:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 312:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg2(void) 
 313:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 314:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 315:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 316:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 317:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[2u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 318:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 319:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(2u) & CAN_TX_REQUEST_PENDING) != 0u)
 320:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 321:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 322:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 323:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 324:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 325:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 326:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_2_TRASMITTED` */
 327:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 328:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 329:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 330:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_2_CALLBACK
 331:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_2_Callback();
 332:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_2_CALLBACK */
 333:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 334:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(2u),
 335:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(2u)) | CAN_SEND_MESSAGE);
 336:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 337:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 338:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 339:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 340:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX2_FUNC_ENABLE */
 341:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 342:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 343:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX3_FUNC_ENABLE)
 344:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 345:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg3
 346:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 347:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 348:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 349:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 3. The function checks
 350:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 3 doesn't already have un-transmitted messages waiting for
 351:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 352:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 353:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 354:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 355:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 356:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 357:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 358:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 359:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 360:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 361:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 362:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 363:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg3(void) 
 365:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 366:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 12


 367:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 368:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 369:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[3u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 370:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 371:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(3u) & CAN_TX_REQUEST_PENDING) != 0u)
 372:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 373:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 374:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 375:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 376:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 377:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 378:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_3_TRASMITTED` */
 379:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 380:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 381:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 382:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_3_CALLBACK
 383:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_3_Callback();
 384:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_3_CALLBACK */
 385:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 386:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(3u),
 387:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(3u)) | CAN_SEND_MESSAGE);
 388:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 389:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 390:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 391:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 392:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX3_FUNC_ENABLE */
 393:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 394:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 395:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX4_FUNC_ENABLE)
 396:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 397:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg4
 398:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 399:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 400:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 401:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 4. The function checks
 402:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 4 doesn't already have un-transmitted messages waiting for
 403:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 404:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 405:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 406:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 407:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 408:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 409:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 410:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 411:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 412:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 413:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 414:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 415:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 416:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg4(void) 
 417:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 418:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 419:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 420:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 421:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[4u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 422:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 423:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(4u) & CAN_TX_REQUEST_PENDING) != 0u)
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 13


 424:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 425:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 426:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 427:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 428:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 429:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 430:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_4_TRASMITTED` */
 431:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 432:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 433:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 434:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_4_CALLBACK
 435:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_4_Callback();
 436:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_4_CALLBACK */
 437:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 438:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(4u),
 439:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(4u)) | CAN_SEND_MESSAGE);
 440:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 441:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 442:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 443:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 444:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX4_FUNC_ENABLE */
 445:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 446:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 447:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX5_FUNC_ENABLE)
 448:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 449:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg5
 450:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 451:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 452:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 453:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 5. The function checks
 454:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 5 doesn't already have un-transmitted messages waiting for
 455:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 456:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 457:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 458:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 459:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 460:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 461:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 462:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 463:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 464:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 465:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 466:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 467:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 468:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg5(void) 
 469:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 470:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 471:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 472:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 473:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[5u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 474:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 475:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(5u) & CAN_TX_REQUEST_PENDING) != 0u)
 476:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 477:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 478:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 479:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 480:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 14


 481:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 482:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_5_TRASMITTED` */
 483:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 484:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 485:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 486:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_5_CALLBACK
 487:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_5_Callback();
 488:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_5_CALLBACK */
 489:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 490:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(5u),
 491:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(5u)) | CAN_SEND_MESSAGE);
 492:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 493:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 494:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 495:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 496:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX5_FUNC_ENABLE */
 497:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 498:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 499:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX6_FUNC_ENABLE)
 500:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 501:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg6
 502:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 503:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 504:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 505:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 6. The function checks
 506:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 6 doesn't already have un-transmitted messages waiting for
 507:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 508:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 509:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 510:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 511:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 512:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 513:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 514:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 515:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 516:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 517:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 518:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 519:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 520:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg6(void) 
 521:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 522:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 523:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 524:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 525:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[6u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 526:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 527:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(6u) & CAN_TX_REQUEST_PENDING) != 0u)
 528:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 529:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 530:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 531:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 532:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 533:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 534:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_6_TRASMITTED` */
 535:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 536:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 537:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 15


 538:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_6_CALLBACK
 539:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_6_Callback();
 540:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_6_CALLBACK */
 541:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 542:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(6u),
 543:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(6u)) | CAN_SEND_MESSAGE);
 544:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 545:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 546:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 547:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 548:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX6_FUNC_ENABLE */
 549:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 550:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 551:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX7_FUNC_ENABLE)
 552:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 553:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg7)
 554:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 555:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 556:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 557:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 7. The function checks
 558:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 7 doesn't already have un-transmitted messages waiting for
 559:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 560:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 561:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 562:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 563:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 564:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 565:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 566:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 567:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 568:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 569:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 570:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 571:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 572:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg7(void) 
 573:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 574:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 575:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 576:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 577:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[7u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 578:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 579:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(7u) & CAN_TX_REQUEST_PENDING) != 0u)
 580:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 581:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 582:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 583:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 584:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 585:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 586:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_7_TRASMITTED` */
 587:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 588:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 589:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 590:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_7_CALLBACK
 591:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_7_Callback();
 592:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_7_CALLBACK */
 593:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 594:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(7u),
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 16


 595:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(7u)) | CAN_SEND_MESSAGE);
 596:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 597:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 598:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 599:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 600:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX7_FUNC_ENABLE */
 601:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 602:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 603:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /*******************************************************************************
 604:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_ReceiveMsg
 605:Generated_Source\PSoC5/CAN_TX_RX_func.c **** ********************************************************************************
 606:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 607:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Summary:
 608:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  This function is the entry point to Receive Message Interrupt for Basic
 609:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  mailboxes. Clears the Receive particular Message interrupt flag. Generated
 610:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  only if one of the Receive mailboxes is designed as Basic.
 611:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 612:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Parameters:
 613:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  rxMailbox: The mailbox number that trig Receive Message Interrupt.
 614:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 615:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Return:
 616:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  None.
 617:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 618:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Reentrant:
 619:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  Depends on the Customer code.
 620:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 621:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *******************************************************************************/
 622:Generated_Source\PSoC5/CAN_TX_RX_func.c **** void CAN_ReceiveMsg(uint8 rxMailbox) 
 623:Generated_Source\PSoC5/CAN_TX_RX_func.c **** {
 255              		.loc 1 623 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              		@ link register save eliminated.
 260              	.LVL29:
 624:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     #if (CY_PSOC3 || CY_PSOC5)
 625:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         if ((CAN_RX[rxMailbox].rxcmd.byte[0u] & CAN_RX_ACK_MSG) != 0u)
 261              		.loc 1 625 0
 262 0000 4001     		lsls	r0, r0, #5
 263              	.LVL30:
 264 0002 054B     		ldr	r3, .L30
 265 0004 C25C     		ldrb	r2, [r0, r3]	@ zero_extendqisi2
 266 0006 12F0010F 		tst	r2, #1
 267 000a 03D0     		beq	.L28
 626:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     #else  /* CY_PSOC4 */
 627:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         if ((CAN_RX_CMD_REG(rxMailbox) & CAN_RX_ACK_MSG) != 0u)
 628:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     #endif /* CY_PSOC3 || CY_PSOC5 */
 629:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 630:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             /* `#START MESSAGE_BASIC_RECEIVED` */
 631:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 632:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             /* `#END` */
 633:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 634:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #ifdef CAN_RECEIVE_MSG_CALLBACK
 635:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CAN_ReceiveMsg_Callback();
 636:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #endif /* CAN_RECEIVE_MSG_CALLBACK */
 637:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 638:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #if (CY_PSOC3 || CY_PSOC5)
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 17


 639:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CAN_RX[rxMailbox].rxcmd.byte[0u] |= CAN_RX_ACK_MSG;
 268              		.loc 1 639 0
 269 000c C25C     		ldrb	r2, [r0, r3]	@ zero_extendqisi2
 270 000e 42F00102 		orr	r2, r2, #1
 271 0012 C254     		strb	r2, [r0, r3]
 272              	.L28:
 273 0014 7047     		bx	lr
 274              	.L31:
 275 0016 00BF     		.align	2
 276              	.L30:
 277 0018 A0A00040 		.word	1073782944
 278              		.cfi_endproc
 279              	.LFE2:
 280              		.size	CAN_ReceiveMsg, .-CAN_ReceiveMsg
 281              		.section	.text.CAN_ReceiveMsgTorque_Request_Command,"ax",%progbits
 282              		.align	2
 283              		.global	CAN_ReceiveMsgTorque_Request_Command
 284              		.thumb
 285              		.thumb_func
 286              		.type	CAN_ReceiveMsgTorque_Request_Command, %function
 287              	CAN_ReceiveMsgTorque_Request_Command:
 288              	.LFB3:
 640:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #else  /* CY_PSOC4 */
 641:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CAN_RX_CMD_REG(rxMailbox) |= CAN_RX_ACK_MSG;
 642:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #endif /* CY_PSOC3 || CY_PSOC5 */
 643:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         }
 644:Generated_Source\PSoC5/CAN_TX_RX_func.c **** }
 645:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 646:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 647:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_RX0_FUNC_ENABLE)
 648:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 649:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_ReceiveMsgTorque_Request_Command
 650:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 651:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 652:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 653:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Receive Message 0 Interrupt. Clears the
 654:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Receive Message 0 interrupt flag. Generated only for the Receive mailbox
 655:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  designed as Full.
 656:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 657:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 658:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 659:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 660:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 661:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 662:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 663:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Reentrant:
 664:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Depends on the Customer code.
 665:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 666:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 667:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     void CAN_ReceiveMsgTorque_Request_Command(void) 
 668:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 289              		.loc 1 668 0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293              		@ link register save eliminated.
 669:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         /* `#START MESSAGE_Torque_Request_Command_RECEIVED` */
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 18


 670:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 671:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         /* `#END` */
 672:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 673:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #ifdef CAN_RECEIVE_MSG_Torque_Request_Command_CALLBACK
 674:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             CAN_ReceiveMsg_Torque_Request_Command_Callback();
 675:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CAN_RECEIVE_MSG_Torque_Request_Command_CALLBACK */
 676:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 677:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         CAN_RX[0u].rxcmd.byte[0u] |= CAN_RX_ACK_MSG;
 294              		.loc 1 677 0
 295 0000 024A     		ldr	r2, .L33
 296 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 297 0004 43F00103 		orr	r3, r3, #1
 298 0008 1370     		strb	r3, [r2]
 299 000a 7047     		bx	lr
 300              	.L34:
 301              		.align	2
 302              	.L33:
 303 000c A0A00040 		.word	1073782944
 304              		.cfi_endproc
 305              	.LFE3:
 306              		.size	CAN_ReceiveMsgTorque_Request_Command, .-CAN_ReceiveMsgTorque_Request_Command
 307              		.text
 308              	.Letext0:
 309              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 310              		.file 3 "Generated_Source\\PSoC5\\CAN.h"
 311              		.section	.debug_info,"",%progbits
 312              	.Ldebug_info0:
 313 0000 48030000 		.4byte	0x348
 314 0004 0400     		.2byte	0x4
 315 0006 00000000 		.4byte	.Ldebug_abbrev0
 316 000a 04       		.byte	0x4
 317 000b 01       		.uleb128 0x1
 318 000c 97010000 		.4byte	.LASF44
 319 0010 0C       		.byte	0xc
 320 0011 51000000 		.4byte	.LASF45
 321 0015 5C020000 		.4byte	.LASF46
 322 0019 00000000 		.4byte	.Ldebug_ranges0+0
 323 001d 00000000 		.4byte	0
 324 0021 00000000 		.4byte	.Ldebug_line0
 325 0025 02       		.uleb128 0x2
 326 0026 01       		.byte	0x1
 327 0027 06       		.byte	0x6
 328 0028 C5020000 		.4byte	.LASF0
 329 002c 02       		.uleb128 0x2
 330 002d 01       		.byte	0x1
 331 002e 08       		.byte	0x8
 332 002f A9000000 		.4byte	.LASF1
 333 0033 02       		.uleb128 0x2
 334 0034 02       		.byte	0x2
 335 0035 05       		.byte	0x5
 336 0036 3A010000 		.4byte	.LASF2
 337 003a 02       		.uleb128 0x2
 338 003b 02       		.byte	0x2
 339 003c 07       		.byte	0x7
 340 003d 33000000 		.4byte	.LASF3
 341 0041 02       		.uleb128 0x2
 342 0042 04       		.byte	0x4
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 19


 343 0043 05       		.byte	0x5
 344 0044 B0020000 		.4byte	.LASF4
 345 0048 02       		.uleb128 0x2
 346 0049 04       		.byte	0x4
 347 004a 07       		.byte	0x7
 348 004b ED000000 		.4byte	.LASF5
 349 004f 02       		.uleb128 0x2
 350 0050 08       		.byte	0x8
 351 0051 05       		.byte	0x5
 352 0052 35020000 		.4byte	.LASF6
 353 0056 02       		.uleb128 0x2
 354 0057 08       		.byte	0x8
 355 0058 07       		.byte	0x7
 356 0059 58010000 		.4byte	.LASF7
 357 005d 03       		.uleb128 0x3
 358 005e 04       		.byte	0x4
 359 005f 05       		.byte	0x5
 360 0060 696E7400 		.ascii	"int\000"
 361 0064 02       		.uleb128 0x2
 362 0065 04       		.byte	0x4
 363 0066 07       		.byte	0x7
 364 0067 4B010000 		.4byte	.LASF8
 365 006b 04       		.uleb128 0x4
 366 006c FF000000 		.4byte	.LASF9
 367 0070 02       		.byte	0x2
 368 0071 E801     		.2byte	0x1e8
 369 0073 2C000000 		.4byte	0x2c
 370 0077 04       		.uleb128 0x4
 371 0078 44010000 		.4byte	.LASF10
 372 007c 02       		.byte	0x2
 373 007d EA01     		.2byte	0x1ea
 374 007f 48000000 		.4byte	0x48
 375 0083 02       		.uleb128 0x2
 376 0084 04       		.byte	0x4
 377 0085 04       		.byte	0x4
 378 0086 8C000000 		.4byte	.LASF11
 379 008a 02       		.uleb128 0x2
 380 008b 08       		.byte	0x8
 381 008c 04       		.byte	0x4
 382 008d 2B010000 		.4byte	.LASF12
 383 0091 02       		.uleb128 0x2
 384 0092 01       		.byte	0x1
 385 0093 08       		.byte	0x8
 386 0094 4C000000 		.4byte	.LASF13
 387 0098 04       		.uleb128 0x4
 388 0099 C3000000 		.4byte	.LASF14
 389 009d 02       		.byte	0x2
 390 009e 9202     		.2byte	0x292
 391 00a0 A4000000 		.4byte	0xa4
 392 00a4 05       		.uleb128 0x5
 393 00a5 6B000000 		.4byte	0x6b
 394 00a9 04       		.uleb128 0x4
 395 00aa B7000000 		.4byte	.LASF15
 396 00ae 02       		.byte	0x2
 397 00af 9402     		.2byte	0x294
 398 00b1 B5000000 		.4byte	0xb5
 399 00b5 05       		.uleb128 0x5
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 20


 400 00b6 77000000 		.4byte	0x77
 401 00ba 02       		.uleb128 0x2
 402 00bb 08       		.byte	0x8
 403 00bc 04       		.byte	0x4
 404 00bd B9020000 		.4byte	.LASF16
 405 00c1 02       		.uleb128 0x2
 406 00c2 04       		.byte	0x4
 407 00c3 07       		.byte	0x7
 408 00c4 25020000 		.4byte	.LASF17
 409 00c8 06       		.uleb128 0x6
 410 00c9 08       		.byte	0x8
 411 00ca 03       		.byte	0x3
 412 00cb 6F       		.byte	0x6f
 413 00cc DD000000 		.4byte	0xdd
 414 00d0 07       		.uleb128 0x7
 415 00d1 79000000 		.4byte	.LASF19
 416 00d5 03       		.byte	0x3
 417 00d6 71       		.byte	0x71
 418 00d7 DD000000 		.4byte	0xdd
 419 00db 00       		.byte	0
 420 00dc 00       		.byte	0
 421 00dd 08       		.uleb128 0x8
 422 00de 6B000000 		.4byte	0x6b
 423 00e2 ED000000 		.4byte	0xed
 424 00e6 09       		.uleb128 0x9
 425 00e7 C1000000 		.4byte	0xc1
 426 00eb 07       		.byte	0x7
 427 00ec 00       		.byte	0
 428 00ed 0A       		.uleb128 0xa
 429 00ee 05010000 		.4byte	.LASF18
 430 00f2 03       		.byte	0x3
 431 00f3 72       		.byte	0x72
 432 00f4 C8000000 		.4byte	0xc8
 433 00f8 06       		.uleb128 0x6
 434 00f9 08       		.byte	0x8
 435 00fa 03       		.byte	0x3
 436 00fb 75       		.byte	0x75
 437 00fc 0D010000 		.4byte	0x10d
 438 0100 07       		.uleb128 0x7
 439 0101 79000000 		.4byte	.LASF19
 440 0105 03       		.byte	0x3
 441 0106 77       		.byte	0x77
 442 0107 1D010000 		.4byte	0x11d
 443 010b 00       		.byte	0
 444 010c 00       		.byte	0
 445 010d 08       		.uleb128 0x8
 446 010e 98000000 		.4byte	0x98
 447 0112 1D010000 		.4byte	0x11d
 448 0116 09       		.uleb128 0x9
 449 0117 C1000000 		.4byte	0xc1
 450 011b 07       		.byte	0x7
 451 011c 00       		.byte	0
 452 011d 05       		.uleb128 0x5
 453 011e 0D010000 		.4byte	0x10d
 454 0122 0A       		.uleb128 0xa
 455 0123 0E000000 		.4byte	.LASF20
 456 0127 03       		.byte	0x3
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 21


 457 0128 78       		.byte	0x78
 458 0129 F8000000 		.4byte	0xf8
 459 012d 06       		.uleb128 0x6
 460 012e 04       		.byte	0x4
 461 012f 03       		.byte	0x3
 462 0130 7B       		.byte	0x7b
 463 0131 42010000 		.4byte	0x142
 464 0135 07       		.uleb128 0x7
 465 0136 79000000 		.4byte	.LASF19
 466 013a 03       		.byte	0x3
 467 013b 7D       		.byte	0x7d
 468 013c 52010000 		.4byte	0x152
 469 0140 00       		.byte	0
 470 0141 00       		.byte	0
 471 0142 08       		.uleb128 0x8
 472 0143 98000000 		.4byte	0x98
 473 0147 52010000 		.4byte	0x152
 474 014b 09       		.uleb128 0x9
 475 014c C1000000 		.4byte	0xc1
 476 0150 03       		.byte	0x3
 477 0151 00       		.byte	0
 478 0152 05       		.uleb128 0x5
 479 0153 42010000 		.4byte	0x142
 480 0157 0A       		.uleb128 0xa
 481 0158 28000000 		.4byte	.LASF21
 482 015c 03       		.byte	0x3
 483 015d 7E       		.byte	0x7e
 484 015e 2D010000 		.4byte	0x12d
 485 0162 06       		.uleb128 0x6
 486 0163 0C       		.byte	0xc
 487 0164 03       		.byte	0x3
 488 0165 81       		.byte	0x81
 489 0166 B2010000 		.4byte	0x1b2
 490 016a 0B       		.uleb128 0xb
 491 016b 696400   		.ascii	"id\000"
 492 016e 03       		.byte	0x3
 493 016f 83       		.byte	0x83
 494 0170 77000000 		.4byte	0x77
 495 0174 00       		.byte	0
 496 0175 0B       		.uleb128 0xb
 497 0176 72747200 		.ascii	"rtr\000"
 498 017a 03       		.byte	0x3
 499 017b 84       		.byte	0x84
 500 017c 6B000000 		.4byte	0x6b
 501 0180 04       		.byte	0x4
 502 0181 0B       		.uleb128 0xb
 503 0182 69646500 		.ascii	"ide\000"
 504 0186 03       		.byte	0x3
 505 0187 85       		.byte	0x85
 506 0188 6B000000 		.4byte	0x6b
 507 018c 05       		.byte	0x5
 508 018d 0B       		.uleb128 0xb
 509 018e 646C6300 		.ascii	"dlc\000"
 510 0192 03       		.byte	0x3
 511 0193 86       		.byte	0x86
 512 0194 6B000000 		.4byte	0x6b
 513 0198 06       		.byte	0x6
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 22


 514 0199 0B       		.uleb128 0xb
 515 019a 69727100 		.ascii	"irq\000"
 516 019e 03       		.byte	0x3
 517 019f 87       		.byte	0x87
 518 01a0 6B000000 		.4byte	0x6b
 519 01a4 07       		.byte	0x7
 520 01a5 0B       		.uleb128 0xb
 521 01a6 6D736700 		.ascii	"msg\000"
 522 01aa 03       		.byte	0x3
 523 01ab 8B       		.byte	0x8b
 524 01ac B2010000 		.4byte	0x1b2
 525 01b0 08       		.byte	0x8
 526 01b1 00       		.byte	0
 527 01b2 0C       		.uleb128 0xc
 528 01b3 04       		.byte	0x4
 529 01b4 ED000000 		.4byte	0xed
 530 01b8 0A       		.uleb128 0xa
 531 01b9 92000000 		.4byte	.LASF22
 532 01bd 03       		.byte	0x3
 533 01be 8C       		.byte	0x8c
 534 01bf 62010000 		.4byte	0x162
 535 01c3 06       		.uleb128 0x6
 536 01c4 20       		.byte	0x20
 537 01c5 03       		.byte	0x3
 538 01c6 A0       		.byte	0xa0
 539 01c7 20020000 		.4byte	0x220
 540 01cb 07       		.uleb128 0x7
 541 01cc 91010000 		.4byte	.LASF23
 542 01d0 03       		.byte	0x3
 543 01d1 A2       		.byte	0xa2
 544 01d2 57010000 		.4byte	0x157
 545 01d6 00       		.byte	0
 546 01d7 07       		.uleb128 0x7
 547 01d8 18010000 		.4byte	.LASF24
 548 01dc 03       		.byte	0x3
 549 01dd A3       		.byte	0xa3
 550 01de 57010000 		.4byte	0x157
 551 01e2 04       		.byte	0x4
 552 01e3 07       		.uleb128 0x7
 553 01e4 7E000000 		.4byte	.LASF25
 554 01e8 03       		.byte	0x3
 555 01e9 A4       		.byte	0xa4
 556 01ea 22010000 		.4byte	0x122
 557 01ee 08       		.byte	0x8
 558 01ef 07       		.uleb128 0x7
 559 01f0 22000000 		.4byte	.LASF26
 560 01f4 03       		.byte	0x3
 561 01f5 A5       		.byte	0xa5
 562 01f6 57010000 		.4byte	0x157
 563 01fa 10       		.byte	0x10
 564 01fb 07       		.uleb128 0x7
 565 01fc 56020000 		.4byte	.LASF27
 566 0200 03       		.byte	0x3
 567 0201 A6       		.byte	0xa6
 568 0202 57010000 		.4byte	0x157
 569 0206 14       		.byte	0x14
 570 0207 07       		.uleb128 0x7
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 23


 571 0208 2E020000 		.4byte	.LASF28
 572 020c 03       		.byte	0x3
 573 020d A7       		.byte	0xa7
 574 020e 57010000 		.4byte	0x157
 575 0212 18       		.byte	0x18
 576 0213 07       		.uleb128 0x7
 577 0214 85000000 		.4byte	.LASF29
 578 0218 03       		.byte	0x3
 579 0219 A8       		.byte	0xa8
 580 021a 57010000 		.4byte	0x157
 581 021e 1C       		.byte	0x1c
 582 021f 00       		.byte	0
 583 0220 0A       		.uleb128 0xa
 584 0221 83010000 		.4byte	.LASF30
 585 0225 03       		.byte	0x3
 586 0226 A9       		.byte	0xa9
 587 0227 C3010000 		.4byte	0x1c3
 588 022b 06       		.uleb128 0x6
 589 022c 10       		.byte	0x10
 590 022d 03       		.byte	0x3
 591 022e AC       		.byte	0xac
 592 022f 58020000 		.4byte	0x258
 593 0233 07       		.uleb128 0x7
 594 0234 46000000 		.4byte	.LASF31
 595 0238 03       		.byte	0x3
 596 0239 AE       		.byte	0xae
 597 023a 57010000 		.4byte	0x157
 598 023e 00       		.byte	0
 599 023f 07       		.uleb128 0x7
 600 0240 1D000000 		.4byte	.LASF32
 601 0244 03       		.byte	0x3
 602 0245 AF       		.byte	0xaf
 603 0246 57010000 		.4byte	0x157
 604 024a 04       		.byte	0x4
 605 024b 07       		.uleb128 0x7
 606 024c D1020000 		.4byte	.LASF33
 607 0250 03       		.byte	0x3
 608 0251 B0       		.byte	0xb0
 609 0252 22010000 		.4byte	0x122
 610 0256 08       		.byte	0x8
 611 0257 00       		.byte	0
 612 0258 0A       		.uleb128 0xa
 613 0259 1D010000 		.4byte	.LASF34
 614 025d 03       		.byte	0x3
 615 025e B1       		.byte	0xb1
 616 025f 2B020000 		.4byte	0x22b
 617 0263 0D       		.uleb128 0xd
 618 0264 9D000000 		.4byte	.LASF47
 619 0268 01       		.byte	0x1
 620 0269 34       		.byte	0x34
 621 026a 6B000000 		.4byte	0x6b
 622 026e 00000000 		.4byte	.LFB0
 623 0272 D8000000 		.4byte	.LFE0-.LFB0
 624 0276 01       		.uleb128 0x1
 625 0277 9C       		.byte	0x9c
 626 0278 E2020000 		.4byte	0x2e2
 627 027c 0E       		.uleb128 0xe
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 24


 628 027d 00000000 		.4byte	.LASF39
 629 0281 01       		.byte	0x1
 630 0282 34       		.byte	0x34
 631 0283 E2020000 		.4byte	0x2e2
 632 0287 00000000 		.4byte	.LLST0
 633 028b 0F       		.uleb128 0xf
 634 028c 6900     		.ascii	"i\000"
 635 028e 01       		.byte	0x1
 636 028f 36       		.byte	0x36
 637 0290 6B000000 		.4byte	0x6b
 638 0294 21000000 		.4byte	.LLST1
 639 0298 0F       		.uleb128 0xf
 640 0299 6A00     		.ascii	"j\000"
 641 029b 01       		.byte	0x1
 642 029c 36       		.byte	0x36
 643 029d 6B000000 		.4byte	0x6b
 644 02a1 4A000000 		.4byte	.LLST2
 645 02a5 10       		.uleb128 0x10
 646 02a6 08000000 		.4byte	.LASF35
 647 02aa 01       		.byte	0x1
 648 02ab 36       		.byte	0x36
 649 02ac 6B000000 		.4byte	0x6b
 650 02b0 74000000 		.4byte	.LLST3
 651 02b4 10       		.uleb128 0x10
 652 02b5 BD000000 		.4byte	.LASF36
 653 02b9 01       		.byte	0x1
 654 02ba 37       		.byte	0x37
 655 02bb 6B000000 		.4byte	0x6b
 656 02bf 9D000000 		.4byte	.LLST4
 657 02c3 10       		.uleb128 0x10
 658 02c4 6F010000 		.4byte	.LASF37
 659 02c8 01       		.byte	0x1
 660 02c9 38       		.byte	0x38
 661 02ca 6B000000 		.4byte	0x6b
 662 02ce C7000000 		.4byte	.LLST5
 663 02d2 10       		.uleb128 0x10
 664 02d3 32010000 		.4byte	.LASF38
 665 02d7 01       		.byte	0x1
 666 02d8 39       		.byte	0x39
 667 02d9 77000000 		.4byte	0x77
 668 02dd FD000000 		.4byte	.LLST6
 669 02e1 00       		.byte	0
 670 02e2 0C       		.uleb128 0xc
 671 02e3 04       		.byte	0x4
 672 02e4 E8020000 		.4byte	0x2e8
 673 02e8 11       		.uleb128 0x11
 674 02e9 B8010000 		.4byte	0x1b8
 675 02ed 12       		.uleb128 0x12
 676 02ee 76010000 		.4byte	.LASF41
 677 02f2 01       		.byte	0x1
 678 02f3 B2       		.byte	0xb2
 679 02f4 00000000 		.4byte	.LFB1
 680 02f8 1C000000 		.4byte	.LFE1-.LFB1
 681 02fc 01       		.uleb128 0x1
 682 02fd 9C       		.byte	0x9c
 683 02fe 12030000 		.4byte	0x312
 684 0302 0E       		.uleb128 0xe
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 25


 685 0303 43020000 		.4byte	.LASF40
 686 0307 01       		.byte	0x1
 687 0308 B2       		.byte	0xb2
 688 0309 6B000000 		.4byte	0x6b
 689 030d 3D010000 		.4byte	.LLST7
 690 0311 00       		.byte	0
 691 0312 13       		.uleb128 0x13
 692 0313 D8020000 		.4byte	.LASF42
 693 0317 01       		.byte	0x1
 694 0318 6E02     		.2byte	0x26e
 695 031a 00000000 		.4byte	.LFB2
 696 031e 1C000000 		.4byte	.LFE2-.LFB2
 697 0322 01       		.uleb128 0x1
 698 0323 9C       		.byte	0x9c
 699 0324 39030000 		.4byte	0x339
 700 0328 14       		.uleb128 0x14
 701 0329 4C020000 		.4byte	.LASF43
 702 032d 01       		.byte	0x1
 703 032e 6E02     		.2byte	0x26e
 704 0330 6B000000 		.4byte	0x6b
 705 0334 5E010000 		.4byte	.LLST8
 706 0338 00       		.byte	0
 707 0339 15       		.uleb128 0x15
 708 033a C8000000 		.4byte	.LASF48
 709 033e 01       		.byte	0x1
 710 033f 9B02     		.2byte	0x29b
 711 0341 00000000 		.4byte	.LFB3
 712 0345 10000000 		.4byte	.LFE3-.LFB3
 713 0349 01       		.uleb128 0x1
 714 034a 9C       		.byte	0x9c
 715 034b 00       		.byte	0
 716              		.section	.debug_abbrev,"",%progbits
 717              	.Ldebug_abbrev0:
 718 0000 01       		.uleb128 0x1
 719 0001 11       		.uleb128 0x11
 720 0002 01       		.byte	0x1
 721 0003 25       		.uleb128 0x25
 722 0004 0E       		.uleb128 0xe
 723 0005 13       		.uleb128 0x13
 724 0006 0B       		.uleb128 0xb
 725 0007 03       		.uleb128 0x3
 726 0008 0E       		.uleb128 0xe
 727 0009 1B       		.uleb128 0x1b
 728 000a 0E       		.uleb128 0xe
 729 000b 55       		.uleb128 0x55
 730 000c 17       		.uleb128 0x17
 731 000d 11       		.uleb128 0x11
 732 000e 01       		.uleb128 0x1
 733 000f 10       		.uleb128 0x10
 734 0010 17       		.uleb128 0x17
 735 0011 00       		.byte	0
 736 0012 00       		.byte	0
 737 0013 02       		.uleb128 0x2
 738 0014 24       		.uleb128 0x24
 739 0015 00       		.byte	0
 740 0016 0B       		.uleb128 0xb
 741 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 26


 742 0018 3E       		.uleb128 0x3e
 743 0019 0B       		.uleb128 0xb
 744 001a 03       		.uleb128 0x3
 745 001b 0E       		.uleb128 0xe
 746 001c 00       		.byte	0
 747 001d 00       		.byte	0
 748 001e 03       		.uleb128 0x3
 749 001f 24       		.uleb128 0x24
 750 0020 00       		.byte	0
 751 0021 0B       		.uleb128 0xb
 752 0022 0B       		.uleb128 0xb
 753 0023 3E       		.uleb128 0x3e
 754 0024 0B       		.uleb128 0xb
 755 0025 03       		.uleb128 0x3
 756 0026 08       		.uleb128 0x8
 757 0027 00       		.byte	0
 758 0028 00       		.byte	0
 759 0029 04       		.uleb128 0x4
 760 002a 16       		.uleb128 0x16
 761 002b 00       		.byte	0
 762 002c 03       		.uleb128 0x3
 763 002d 0E       		.uleb128 0xe
 764 002e 3A       		.uleb128 0x3a
 765 002f 0B       		.uleb128 0xb
 766 0030 3B       		.uleb128 0x3b
 767 0031 05       		.uleb128 0x5
 768 0032 49       		.uleb128 0x49
 769 0033 13       		.uleb128 0x13
 770 0034 00       		.byte	0
 771 0035 00       		.byte	0
 772 0036 05       		.uleb128 0x5
 773 0037 35       		.uleb128 0x35
 774 0038 00       		.byte	0
 775 0039 49       		.uleb128 0x49
 776 003a 13       		.uleb128 0x13
 777 003b 00       		.byte	0
 778 003c 00       		.byte	0
 779 003d 06       		.uleb128 0x6
 780 003e 13       		.uleb128 0x13
 781 003f 01       		.byte	0x1
 782 0040 0B       		.uleb128 0xb
 783 0041 0B       		.uleb128 0xb
 784 0042 3A       		.uleb128 0x3a
 785 0043 0B       		.uleb128 0xb
 786 0044 3B       		.uleb128 0x3b
 787 0045 0B       		.uleb128 0xb
 788 0046 01       		.uleb128 0x1
 789 0047 13       		.uleb128 0x13
 790 0048 00       		.byte	0
 791 0049 00       		.byte	0
 792 004a 07       		.uleb128 0x7
 793 004b 0D       		.uleb128 0xd
 794 004c 00       		.byte	0
 795 004d 03       		.uleb128 0x3
 796 004e 0E       		.uleb128 0xe
 797 004f 3A       		.uleb128 0x3a
 798 0050 0B       		.uleb128 0xb
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 27


 799 0051 3B       		.uleb128 0x3b
 800 0052 0B       		.uleb128 0xb
 801 0053 49       		.uleb128 0x49
 802 0054 13       		.uleb128 0x13
 803 0055 38       		.uleb128 0x38
 804 0056 0B       		.uleb128 0xb
 805 0057 00       		.byte	0
 806 0058 00       		.byte	0
 807 0059 08       		.uleb128 0x8
 808 005a 01       		.uleb128 0x1
 809 005b 01       		.byte	0x1
 810 005c 49       		.uleb128 0x49
 811 005d 13       		.uleb128 0x13
 812 005e 01       		.uleb128 0x1
 813 005f 13       		.uleb128 0x13
 814 0060 00       		.byte	0
 815 0061 00       		.byte	0
 816 0062 09       		.uleb128 0x9
 817 0063 21       		.uleb128 0x21
 818 0064 00       		.byte	0
 819 0065 49       		.uleb128 0x49
 820 0066 13       		.uleb128 0x13
 821 0067 2F       		.uleb128 0x2f
 822 0068 0B       		.uleb128 0xb
 823 0069 00       		.byte	0
 824 006a 00       		.byte	0
 825 006b 0A       		.uleb128 0xa
 826 006c 16       		.uleb128 0x16
 827 006d 00       		.byte	0
 828 006e 03       		.uleb128 0x3
 829 006f 0E       		.uleb128 0xe
 830 0070 3A       		.uleb128 0x3a
 831 0071 0B       		.uleb128 0xb
 832 0072 3B       		.uleb128 0x3b
 833 0073 0B       		.uleb128 0xb
 834 0074 49       		.uleb128 0x49
 835 0075 13       		.uleb128 0x13
 836 0076 00       		.byte	0
 837 0077 00       		.byte	0
 838 0078 0B       		.uleb128 0xb
 839 0079 0D       		.uleb128 0xd
 840 007a 00       		.byte	0
 841 007b 03       		.uleb128 0x3
 842 007c 08       		.uleb128 0x8
 843 007d 3A       		.uleb128 0x3a
 844 007e 0B       		.uleb128 0xb
 845 007f 3B       		.uleb128 0x3b
 846 0080 0B       		.uleb128 0xb
 847 0081 49       		.uleb128 0x49
 848 0082 13       		.uleb128 0x13
 849 0083 38       		.uleb128 0x38
 850 0084 0B       		.uleb128 0xb
 851 0085 00       		.byte	0
 852 0086 00       		.byte	0
 853 0087 0C       		.uleb128 0xc
 854 0088 0F       		.uleb128 0xf
 855 0089 00       		.byte	0
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 28


 856 008a 0B       		.uleb128 0xb
 857 008b 0B       		.uleb128 0xb
 858 008c 49       		.uleb128 0x49
 859 008d 13       		.uleb128 0x13
 860 008e 00       		.byte	0
 861 008f 00       		.byte	0
 862 0090 0D       		.uleb128 0xd
 863 0091 2E       		.uleb128 0x2e
 864 0092 01       		.byte	0x1
 865 0093 3F       		.uleb128 0x3f
 866 0094 19       		.uleb128 0x19
 867 0095 03       		.uleb128 0x3
 868 0096 0E       		.uleb128 0xe
 869 0097 3A       		.uleb128 0x3a
 870 0098 0B       		.uleb128 0xb
 871 0099 3B       		.uleb128 0x3b
 872 009a 0B       		.uleb128 0xb
 873 009b 27       		.uleb128 0x27
 874 009c 19       		.uleb128 0x19
 875 009d 49       		.uleb128 0x49
 876 009e 13       		.uleb128 0x13
 877 009f 11       		.uleb128 0x11
 878 00a0 01       		.uleb128 0x1
 879 00a1 12       		.uleb128 0x12
 880 00a2 06       		.uleb128 0x6
 881 00a3 40       		.uleb128 0x40
 882 00a4 18       		.uleb128 0x18
 883 00a5 9742     		.uleb128 0x2117
 884 00a7 19       		.uleb128 0x19
 885 00a8 01       		.uleb128 0x1
 886 00a9 13       		.uleb128 0x13
 887 00aa 00       		.byte	0
 888 00ab 00       		.byte	0
 889 00ac 0E       		.uleb128 0xe
 890 00ad 05       		.uleb128 0x5
 891 00ae 00       		.byte	0
 892 00af 03       		.uleb128 0x3
 893 00b0 0E       		.uleb128 0xe
 894 00b1 3A       		.uleb128 0x3a
 895 00b2 0B       		.uleb128 0xb
 896 00b3 3B       		.uleb128 0x3b
 897 00b4 0B       		.uleb128 0xb
 898 00b5 49       		.uleb128 0x49
 899 00b6 13       		.uleb128 0x13
 900 00b7 02       		.uleb128 0x2
 901 00b8 17       		.uleb128 0x17
 902 00b9 00       		.byte	0
 903 00ba 00       		.byte	0
 904 00bb 0F       		.uleb128 0xf
 905 00bc 34       		.uleb128 0x34
 906 00bd 00       		.byte	0
 907 00be 03       		.uleb128 0x3
 908 00bf 08       		.uleb128 0x8
 909 00c0 3A       		.uleb128 0x3a
 910 00c1 0B       		.uleb128 0xb
 911 00c2 3B       		.uleb128 0x3b
 912 00c3 0B       		.uleb128 0xb
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 29


 913 00c4 49       		.uleb128 0x49
 914 00c5 13       		.uleb128 0x13
 915 00c6 02       		.uleb128 0x2
 916 00c7 17       		.uleb128 0x17
 917 00c8 00       		.byte	0
 918 00c9 00       		.byte	0
 919 00ca 10       		.uleb128 0x10
 920 00cb 34       		.uleb128 0x34
 921 00cc 00       		.byte	0
 922 00cd 03       		.uleb128 0x3
 923 00ce 0E       		.uleb128 0xe
 924 00cf 3A       		.uleb128 0x3a
 925 00d0 0B       		.uleb128 0xb
 926 00d1 3B       		.uleb128 0x3b
 927 00d2 0B       		.uleb128 0xb
 928 00d3 49       		.uleb128 0x49
 929 00d4 13       		.uleb128 0x13
 930 00d5 02       		.uleb128 0x2
 931 00d6 17       		.uleb128 0x17
 932 00d7 00       		.byte	0
 933 00d8 00       		.byte	0
 934 00d9 11       		.uleb128 0x11
 935 00da 26       		.uleb128 0x26
 936 00db 00       		.byte	0
 937 00dc 49       		.uleb128 0x49
 938 00dd 13       		.uleb128 0x13
 939 00de 00       		.byte	0
 940 00df 00       		.byte	0
 941 00e0 12       		.uleb128 0x12
 942 00e1 2E       		.uleb128 0x2e
 943 00e2 01       		.byte	0x1
 944 00e3 3F       		.uleb128 0x3f
 945 00e4 19       		.uleb128 0x19
 946 00e5 03       		.uleb128 0x3
 947 00e6 0E       		.uleb128 0xe
 948 00e7 3A       		.uleb128 0x3a
 949 00e8 0B       		.uleb128 0xb
 950 00e9 3B       		.uleb128 0x3b
 951 00ea 0B       		.uleb128 0xb
 952 00eb 27       		.uleb128 0x27
 953 00ec 19       		.uleb128 0x19
 954 00ed 11       		.uleb128 0x11
 955 00ee 01       		.uleb128 0x1
 956 00ef 12       		.uleb128 0x12
 957 00f0 06       		.uleb128 0x6
 958 00f1 40       		.uleb128 0x40
 959 00f2 18       		.uleb128 0x18
 960 00f3 9742     		.uleb128 0x2117
 961 00f5 19       		.uleb128 0x19
 962 00f6 01       		.uleb128 0x1
 963 00f7 13       		.uleb128 0x13
 964 00f8 00       		.byte	0
 965 00f9 00       		.byte	0
 966 00fa 13       		.uleb128 0x13
 967 00fb 2E       		.uleb128 0x2e
 968 00fc 01       		.byte	0x1
 969 00fd 3F       		.uleb128 0x3f
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 30


 970 00fe 19       		.uleb128 0x19
 971 00ff 03       		.uleb128 0x3
 972 0100 0E       		.uleb128 0xe
 973 0101 3A       		.uleb128 0x3a
 974 0102 0B       		.uleb128 0xb
 975 0103 3B       		.uleb128 0x3b
 976 0104 05       		.uleb128 0x5
 977 0105 27       		.uleb128 0x27
 978 0106 19       		.uleb128 0x19
 979 0107 11       		.uleb128 0x11
 980 0108 01       		.uleb128 0x1
 981 0109 12       		.uleb128 0x12
 982 010a 06       		.uleb128 0x6
 983 010b 40       		.uleb128 0x40
 984 010c 18       		.uleb128 0x18
 985 010d 9742     		.uleb128 0x2117
 986 010f 19       		.uleb128 0x19
 987 0110 01       		.uleb128 0x1
 988 0111 13       		.uleb128 0x13
 989 0112 00       		.byte	0
 990 0113 00       		.byte	0
 991 0114 14       		.uleb128 0x14
 992 0115 05       		.uleb128 0x5
 993 0116 00       		.byte	0
 994 0117 03       		.uleb128 0x3
 995 0118 0E       		.uleb128 0xe
 996 0119 3A       		.uleb128 0x3a
 997 011a 0B       		.uleb128 0xb
 998 011b 3B       		.uleb128 0x3b
 999 011c 05       		.uleb128 0x5
 1000 011d 49       		.uleb128 0x49
 1001 011e 13       		.uleb128 0x13
 1002 011f 02       		.uleb128 0x2
 1003 0120 17       		.uleb128 0x17
 1004 0121 00       		.byte	0
 1005 0122 00       		.byte	0
 1006 0123 15       		.uleb128 0x15
 1007 0124 2E       		.uleb128 0x2e
 1008 0125 00       		.byte	0
 1009 0126 3F       		.uleb128 0x3f
 1010 0127 19       		.uleb128 0x19
 1011 0128 03       		.uleb128 0x3
 1012 0129 0E       		.uleb128 0xe
 1013 012a 3A       		.uleb128 0x3a
 1014 012b 0B       		.uleb128 0xb
 1015 012c 3B       		.uleb128 0x3b
 1016 012d 05       		.uleb128 0x5
 1017 012e 27       		.uleb128 0x27
 1018 012f 19       		.uleb128 0x19
 1019 0130 11       		.uleb128 0x11
 1020 0131 01       		.uleb128 0x1
 1021 0132 12       		.uleb128 0x12
 1022 0133 06       		.uleb128 0x6
 1023 0134 40       		.uleb128 0x40
 1024 0135 18       		.uleb128 0x18
 1025 0136 9742     		.uleb128 0x2117
 1026 0138 19       		.uleb128 0x19
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 31


 1027 0139 00       		.byte	0
 1028 013a 00       		.byte	0
 1029 013b 00       		.byte	0
 1030              		.section	.debug_loc,"",%progbits
 1031              	.Ldebug_loc0:
 1032              	.LLST0:
 1033 0000 00000000 		.4byte	.LVL0
 1034 0004 C4000000 		.4byte	.LVL25
 1035 0008 0100     		.2byte	0x1
 1036 000a 50       		.byte	0x50
 1037 000b C4000000 		.4byte	.LVL25
 1038 000f D8000000 		.4byte	.LFE0
 1039 0013 0400     		.2byte	0x4
 1040 0015 F3       		.byte	0xf3
 1041 0016 01       		.uleb128 0x1
 1042 0017 50       		.byte	0x50
 1043 0018 9F       		.byte	0x9f
 1044 0019 00000000 		.4byte	0
 1045 001d 00000000 		.4byte	0
 1046              	.LLST1:
 1047 0021 08000000 		.4byte	.LVL2
 1048 0025 AC000000 		.4byte	.LVL19
 1049 0029 0100     		.2byte	0x1
 1050 002b 54       		.byte	0x54
 1051 002c AE000000 		.4byte	.LVL20
 1052 0030 B0000000 		.4byte	.LVL21
 1053 0034 0100     		.2byte	0x1
 1054 0036 54       		.byte	0x54
 1055 0037 B4000000 		.4byte	.LVL22
 1056 003b BE000000 		.4byte	.LVL24
 1057 003f 0100     		.2byte	0x1
 1058 0041 54       		.byte	0x54
 1059 0042 00000000 		.4byte	0
 1060 0046 00000000 		.4byte	0
 1061              	.LLST2:
 1062 004a 56000000 		.4byte	.LVL10
 1063 004e 5A000000 		.4byte	.LVL11
 1064 0052 0200     		.2byte	0x2
 1065 0054 30       		.byte	0x30
 1066 0055 9F       		.byte	0x9f
 1067 0056 5A000000 		.4byte	.LVL11
 1068 005a 78000000 		.4byte	.LVL12
 1069 005e 0100     		.2byte	0x1
 1070 0060 53       		.byte	0x53
 1071 0061 7A000000 		.4byte	.LVL13
 1072 0065 8A000000 		.4byte	.LVL14
 1073 0069 0100     		.2byte	0x1
 1074 006b 53       		.byte	0x53
 1075 006c 00000000 		.4byte	0
 1076 0070 00000000 		.4byte	0
 1077              	.LLST3:
 1078 0074 08000000 		.4byte	.LVL2
 1079 0078 A6000000 		.4byte	.LVL17
 1080 007c 0100     		.2byte	0x1
 1081 007e 56       		.byte	0x56
 1082 007f A8000000 		.4byte	.LVL18
 1083 0083 B0000000 		.4byte	.LVL21
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 32


 1084 0087 0100     		.2byte	0x1
 1085 0089 56       		.byte	0x56
 1086 008a B4000000 		.4byte	.LVL22
 1087 008e BE000000 		.4byte	.LVL24
 1088 0092 0100     		.2byte	0x1
 1089 0094 56       		.byte	0x56
 1090 0095 00000000 		.4byte	0
 1091 0099 00000000 		.4byte	0
 1092              	.LLST4:
 1093 009d 02000000 		.4byte	.LVL1
 1094 00a1 08000000 		.4byte	.LVL2
 1095 00a5 0200     		.2byte	0x2
 1096 00a7 30       		.byte	0x30
 1097 00a8 9F       		.byte	0x9f
 1098 00a9 08000000 		.4byte	.LVL2
 1099 00ad BC000000 		.4byte	.LVL23
 1100 00b1 0100     		.2byte	0x1
 1101 00b3 57       		.byte	0x57
 1102 00b4 BE000000 		.4byte	.LVL24
 1103 00b8 C6000000 		.4byte	.LVL26
 1104 00bc 0100     		.2byte	0x1
 1105 00be 57       		.byte	0x57
 1106 00bf 00000000 		.4byte	0
 1107 00c3 00000000 		.4byte	0
 1108              	.LLST5:
 1109 00c7 02000000 		.4byte	.LVL1
 1110 00cb 08000000 		.4byte	.LVL2
 1111 00cf 0200     		.2byte	0x2
 1112 00d1 31       		.byte	0x31
 1113 00d2 9F       		.byte	0x9f
 1114 00d3 08000000 		.4byte	.LVL2
 1115 00d7 1A000000 		.4byte	.LVL5
 1116 00db 0100     		.2byte	0x1
 1117 00dd 52       		.byte	0x52
 1118 00de A2000000 		.4byte	.LVL15
 1119 00e2 A4000000 		.4byte	.LVL16
 1120 00e6 0200     		.2byte	0x2
 1121 00e8 30       		.byte	0x30
 1122 00e9 9F       		.byte	0x9f
 1123 00ea A4000000 		.4byte	.LVL16
 1124 00ee D8000000 		.4byte	.LFE0
 1125 00f2 0100     		.2byte	0x1
 1126 00f4 52       		.byte	0x52
 1127 00f5 00000000 		.4byte	0
 1128 00f9 00000000 		.4byte	0
 1129              	.LLST6:
 1130 00fd 10000000 		.4byte	.LVL3
 1131 0101 18000000 		.4byte	.LVL4
 1132 0105 0200     		.2byte	0x2
 1133 0107 30       		.byte	0x30
 1134 0108 9F       		.byte	0x9f
 1135 0109 18000000 		.4byte	.LVL4
 1136 010d 48000000 		.4byte	.LVL7
 1137 0111 0100     		.2byte	0x1
 1138 0113 53       		.byte	0x53
 1139 0114 48000000 		.4byte	.LVL7
 1140 0118 4A000000 		.4byte	.LVL8
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 33


 1141 011c 0100     		.2byte	0x1
 1142 011e 5E       		.byte	0x5e
 1143 011f 4A000000 		.4byte	.LVL8
 1144 0123 4E000000 		.4byte	.LVL9
 1145 0127 0100     		.2byte	0x1
 1146 0129 53       		.byte	0x53
 1147 012a 4E000000 		.4byte	.LVL9
 1148 012e A4000000 		.4byte	.LVL16
 1149 0132 0100     		.2byte	0x1
 1150 0134 5E       		.byte	0x5e
 1151 0135 00000000 		.4byte	0
 1152 0139 00000000 		.4byte	0
 1153              	.LLST7:
 1154 013d 00000000 		.4byte	.LVL27
 1155 0141 06000000 		.4byte	.LVL28
 1156 0145 0100     		.2byte	0x1
 1157 0147 50       		.byte	0x50
 1158 0148 06000000 		.4byte	.LVL28
 1159 014c 1C000000 		.4byte	.LFE1
 1160 0150 0400     		.2byte	0x4
 1161 0152 F3       		.byte	0xf3
 1162 0153 01       		.uleb128 0x1
 1163 0154 50       		.byte	0x50
 1164 0155 9F       		.byte	0x9f
 1165 0156 00000000 		.4byte	0
 1166 015a 00000000 		.4byte	0
 1167              	.LLST8:
 1168 015e 00000000 		.4byte	.LVL29
 1169 0162 02000000 		.4byte	.LVL30
 1170 0166 0100     		.2byte	0x1
 1171 0168 50       		.byte	0x50
 1172 0169 02000000 		.4byte	.LVL30
 1173 016d 1C000000 		.4byte	.LFE2
 1174 0171 0400     		.2byte	0x4
 1175 0173 F3       		.byte	0xf3
 1176 0174 01       		.uleb128 0x1
 1177 0175 50       		.byte	0x50
 1178 0176 9F       		.byte	0x9f
 1179 0177 00000000 		.4byte	0
 1180 017b 00000000 		.4byte	0
 1181              		.section	.debug_aranges,"",%progbits
 1182 0000 34000000 		.4byte	0x34
 1183 0004 0200     		.2byte	0x2
 1184 0006 00000000 		.4byte	.Ldebug_info0
 1185 000a 04       		.byte	0x4
 1186 000b 00       		.byte	0
 1187 000c 0000     		.2byte	0
 1188 000e 0000     		.2byte	0
 1189 0010 00000000 		.4byte	.LFB0
 1190 0014 D8000000 		.4byte	.LFE0-.LFB0
 1191 0018 00000000 		.4byte	.LFB1
 1192 001c 1C000000 		.4byte	.LFE1-.LFB1
 1193 0020 00000000 		.4byte	.LFB2
 1194 0024 1C000000 		.4byte	.LFE2-.LFB2
 1195 0028 00000000 		.4byte	.LFB3
 1196 002c 10000000 		.4byte	.LFE3-.LFB3
 1197 0030 00000000 		.4byte	0
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 34


 1198 0034 00000000 		.4byte	0
 1199              		.section	.debug_ranges,"",%progbits
 1200              	.Ldebug_ranges0:
 1201 0000 00000000 		.4byte	.LFB0
 1202 0004 D8000000 		.4byte	.LFE0
 1203 0008 00000000 		.4byte	.LFB1
 1204 000c 1C000000 		.4byte	.LFE1
 1205 0010 00000000 		.4byte	.LFB2
 1206 0014 1C000000 		.4byte	.LFE2
 1207 0018 00000000 		.4byte	.LFB3
 1208 001c 10000000 		.4byte	.LFE3
 1209 0020 00000000 		.4byte	0
 1210 0024 00000000 		.4byte	0
 1211              		.section	.debug_line,"",%progbits
 1212              	.Ldebug_line0:
 1213 0000 00010000 		.section	.debug_str,"MS",%progbits,1
 1213      02005400 
 1213      00000201 
 1213      FB0E0D00 
 1213      01010101 
 1214              	.LASF39:
 1215 0000 6D657373 		.ascii	"message\000"
 1215      61676500 
 1216              	.LASF35:
 1217 0008 73686966 		.ascii	"shift\000"
 1217      7400
 1218              	.LASF20:
 1219 000e 43414E5F 		.ascii	"CAN_DATA_BYTES\000"
 1219      44415441 
 1219      5F425954 
 1219      455300
 1220              	.LASF32:
 1221 001d 74786964 		.ascii	"txid\000"
 1221      00
 1222              	.LASF26:
 1223 0022 7278616D 		.ascii	"rxamr\000"
 1223      7200
 1224              	.LASF21:
 1225 0028 43414E5F 		.ascii	"CAN_REG_32\000"
 1225      5245475F 
 1225      333200
 1226              	.LASF3:
 1227 0033 73686F72 		.ascii	"short unsigned int\000"
 1227      7420756E 
 1227      7369676E 
 1227      65642069 
 1227      6E7400
 1228              	.LASF31:
 1229 0046 7478636D 		.ascii	"txcmd\000"
 1229      6400
 1230              	.LASF13:
 1231 004c 63686172 		.ascii	"char\000"
 1231      00
 1232              	.LASF45:
 1233 0051 47656E65 		.ascii	"Generated_Source\\PSoC5\\CAN_TX_RX_func.c\000"
 1233      72617465 
 1233      645F536F 
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 35


 1233      75726365 
 1233      5C50536F 
 1234              	.LASF19:
 1235 0079 62797465 		.ascii	"byte\000"
 1235      00
 1236              	.LASF25:
 1237 007e 72786461 		.ascii	"rxdata\000"
 1237      746100
 1238              	.LASF29:
 1239 0085 72786163 		.ascii	"rxacrd\000"
 1239      726400
 1240              	.LASF11:
 1241 008c 666C6F61 		.ascii	"float\000"
 1241      7400
 1242              	.LASF22:
 1243 0092 43414E5F 		.ascii	"CAN_TX_MSG\000"
 1243      54585F4D 
 1243      534700
 1244              	.LASF47:
 1245 009d 43414E5F 		.ascii	"CAN_SendMsg\000"
 1245      53656E64 
 1245      4D736700 
 1246              	.LASF1:
 1247 00a9 756E7369 		.ascii	"unsigned char\000"
 1247      676E6564 
 1247      20636861 
 1247      7200
 1248              	.LASF15:
 1249 00b7 72656733 		.ascii	"reg32\000"
 1249      3200
 1250              	.LASF36:
 1251 00bd 72657472 		.ascii	"retry\000"
 1251      7900
 1252              	.LASF14:
 1253 00c3 72656738 		.ascii	"reg8\000"
 1253      00
 1254              	.LASF48:
 1255 00c8 43414E5F 		.ascii	"CAN_ReceiveMsgTorque_Request_Command\000"
 1255      52656365 
 1255      6976654D 
 1255      7367546F 
 1255      72717565 
 1256              	.LASF5:
 1257 00ed 6C6F6E67 		.ascii	"long unsigned int\000"
 1257      20756E73 
 1257      69676E65 
 1257      6420696E 
 1257      7400
 1258              	.LASF9:
 1259 00ff 75696E74 		.ascii	"uint8\000"
 1259      3800
 1260              	.LASF18:
 1261 0105 43414E5F 		.ascii	"CAN_DATA_BYTES_MSG\000"
 1261      44415441 
 1261      5F425954 
 1261      45535F4D 
 1261      534700
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 36


 1262              	.LASF24:
 1263 0118 72786964 		.ascii	"rxid\000"
 1263      00
 1264              	.LASF34:
 1265 011d 43414E5F 		.ascii	"CAN_TX_STRUCT\000"
 1265      54585F53 
 1265      54525543 
 1265      5400
 1266              	.LASF12:
 1267 012b 646F7562 		.ascii	"double\000"
 1267      6C6500
 1268              	.LASF38:
 1269 0132 72656754 		.ascii	"regTemp\000"
 1269      656D7000 
 1270              	.LASF2:
 1271 013a 73686F72 		.ascii	"short int\000"
 1271      7420696E 
 1271      7400
 1272              	.LASF10:
 1273 0144 75696E74 		.ascii	"uint32\000"
 1273      333200
 1274              	.LASF8:
 1275 014b 756E7369 		.ascii	"unsigned int\000"
 1275      676E6564 
 1275      20696E74 
 1275      00
 1276              	.LASF7:
 1277 0158 6C6F6E67 		.ascii	"long long unsigned int\000"
 1277      206C6F6E 
 1277      6720756E 
 1277      7369676E 
 1277      65642069 
 1278              	.LASF37:
 1279 016f 72657375 		.ascii	"result\000"
 1279      6C7400
 1280              	.LASF41:
 1281 0176 43414E5F 		.ascii	"CAN_TxCancel\000"
 1281      54784361 
 1281      6E63656C 
 1281      00
 1282              	.LASF30:
 1283 0183 43414E5F 		.ascii	"CAN_RX_STRUCT\000"
 1283      52585F53 
 1283      54525543 
 1283      5400
 1284              	.LASF23:
 1285 0191 7278636D 		.ascii	"rxcmd\000"
 1285      6400
 1286              	.LASF44:
 1287 0197 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1287      43313120 
 1287      352E342E 
 1287      31203230 
 1287      31363036 
 1288 01ca 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1288      20726576 
 1288      6973696F 
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 37


 1288      6E203233 
 1288      37373135 
 1289 01fd 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1289      66756E63 
 1289      74696F6E 
 1289      2D736563 
 1289      74696F6E 
 1290              	.LASF17:
 1291 0225 73697A65 		.ascii	"sizetype\000"
 1291      74797065 
 1291      00
 1292              	.LASF28:
 1293 022e 7278616D 		.ascii	"rxamrd\000"
 1293      726400
 1294              	.LASF6:
 1295 0235 6C6F6E67 		.ascii	"long long int\000"
 1295      206C6F6E 
 1295      6720696E 
 1295      7400
 1296              	.LASF40:
 1297 0243 62756666 		.ascii	"bufferId\000"
 1297      65724964 
 1297      00
 1298              	.LASF43:
 1299 024c 72784D61 		.ascii	"rxMailbox\000"
 1299      696C626F 
 1299      7800
 1300              	.LASF27:
 1301 0256 72786163 		.ascii	"rxacr\000"
 1301      7200
 1302              	.LASF46:
 1303 025c 433A5C55 		.ascii	"C:\\Users\\kendr\\OneDrive\\Documents\\PEI-Firmware"
 1303      73657273 
 1303      5C6B656E 
 1303      64725C4F 
 1303      6E654472 
 1304 028a 2D464531 		.ascii	"-FE10\\PSOC_VCU_Example\\Design01.cydsn\000"
 1304      305C5053 
 1304      4F435F56 
 1304      43555F45 
 1304      78616D70 
 1305              	.LASF4:
 1306 02b0 6C6F6E67 		.ascii	"long int\000"
 1306      20696E74 
 1306      00
 1307              	.LASF16:
 1308 02b9 6C6F6E67 		.ascii	"long double\000"
 1308      20646F75 
 1308      626C6500 
 1309              	.LASF0:
 1310 02c5 7369676E 		.ascii	"signed char\000"
 1310      65642063 
 1310      68617200 
 1311              	.LASF33:
 1312 02d1 74786461 		.ascii	"txdata\000"
 1312      746100
 1313              	.LASF42:
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccqh9ds0.s 			page 38


 1314 02d8 43414E5F 		.ascii	"CAN_ReceiveMsg\000"
 1314      52656365 
 1314      6976654D 
 1314      736700
 1315              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
