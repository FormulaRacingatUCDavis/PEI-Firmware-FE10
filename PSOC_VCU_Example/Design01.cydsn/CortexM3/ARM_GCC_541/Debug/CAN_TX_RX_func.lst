ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CAN_TX_RX_func.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CAN_SendMsg,"ax",%progbits
  20              		.align	2
  21              		.global	CAN_SendMsg
  22              		.thumb
  23              		.thumb_func
  24              		.type	CAN_SendMsg, %function
  25              	CAN_SendMsg:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\CAN_TX_RX_func.c"
   1:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * File Name: CAN_TX_RX_func.c
   3:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Version 3.0
   4:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
   5:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Description:
   6:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  There are functions process "Full" Receive and Transmit mailboxes:
   7:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_SendMsg0-7();
   8:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg0-15();
   9:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  Transmission of message, and receive routine for "Basic" mailboxes:
  10:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_SendMsg();
  11:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_TxCancel();
  12:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg();
  13:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  14:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  Note:
  15:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *   None
  16:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  17:Generated_Source\PSoC5/CAN_TX_RX_func.c **** ********************************************************************************
  18:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *******************************************************************************/
  23:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  24:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #include "CAN.h"
  25:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #include "cyapicallbacks.h"
  26:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  27:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /* `#START TX_RX_FUNCTION` */
  28:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  29:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /* `#END` */
  30:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 2


  31:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  32:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /*******************************************************************************
  33:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_SendMsg
  34:Generated_Source\PSoC5/CAN_TX_RX_func.c **** ********************************************************************************
  35:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  36:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Summary:
  37:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  This function is Send Message from one of Basic mailboxes. The function loops
  38:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  through the transmit message buffer designed as Basic CAN mailboxes for the
  39:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  first free available and sends from it. The number of retries is limited.
  40:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  41:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Parameters:
  42:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  message: The pointer to a structure that contains all required data to send
  43:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *           messages.
  44:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  45:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Return:
  46:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  Indication if message has been sent.
  47:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *   Define                             Description
  48:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *    CYRET_SUCCESS                      The function passed successfully
  49:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *    CAN_FAIL              The function failed
  50:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  51:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *******************************************************************************/
  52:Generated_Source\PSoC5/CAN_TX_RX_func.c **** uint8 CAN_SendMsg(const CAN_TX_MSG *message) 
  53:Generated_Source\PSoC5/CAN_TX_RX_func.c **** {
  28              		.loc 1 53 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40              	.LVL1:
  54:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 i, j, shift;
  55:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 retry = 0u;
  56:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  41              		.loc 1 56 0
  42 0002 0121     		movs	r1, #1
  55:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  43              		.loc 1 55 0
  44 0004 0026     		movs	r6, #0
  57:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint32 regTemp;
  58:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  59:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     while (retry < CAN_RETRY_NUMBER)
  45              		.loc 1 59 0
  46 0006 5DE0     		b	.L2
  47              	.LVL2:
  48              	.L16:
  60:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
  61:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         shift = 1u;    /* Start from first mailbox */
  62:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         for (i = 0u; i < CAN_NUMBER_OF_TX_MAILBOXES; i++)
  63:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
  64:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             /* Find Basic TX mailboxes */
  65:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_MAILBOX_TYPE & shift) == 0u)
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 3


  49              		.loc 1 65 0
  50 0008 17F00F0F 		tst	r7, #15
  51 000c 4DD1     		bne	.L3
  66:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
  67:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* Find free mailbox */
  68:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #if (CY_PSOC3 || CY_PSOC5)
  69:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG.byte[2] & shift) == 0u)
  52              		.loc 1 69 0
  53 000e 2F4B     		ldr	r3, .L22
  54 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
  55 0012 3B42     		tst	r3, r7
  56 0014 49D1     		bne	.L3
  57              	.LVL3:
  70:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #else  /* CY_PSOC4 */
  71:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG &
  72:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         (uint32) ((uint32) shift << CAN_TWO_BYTE_OFFSET)) == 0u)
  73:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CY_PSOC3 || CY_PSOC5 */
  74:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     {
  75:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         regTemp = 0u;
  76:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  77:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         /* Set message parameters */
  78:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         if (message->rtr != CAN_STANDARD_MESSAGE)
  58              		.loc 1 78 0
  59 0016 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  60 0018 0BB1     		cbz	r3, .L4
  79:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  80:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp = CAN_TX_RTR_MASK;    /* RTR message Enable */
  61              		.loc 1 80 0
  62 001a 4FF40013 		mov	r3, #2097152
  63              	.L4:
  64              	.LVL4:
  81:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
  82:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  83:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         if (message->ide == CAN_STANDARD_MESSAGE)
  65              		.loc 1 83 0
  66 001e 4179     		ldrb	r1, [r0, #5]	@ zero_extendqisi2
  67              	.LVL5:
  68 0020 31B9     		cbnz	r1, .L5
  84:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  85:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_STANDARD_MSG(i, message->id);
  69              		.loc 1 85 0
  70 0022 2B49     		ldr	r1, .L22+4
  71 0024 01EB0211 		add	r1, r1, r2, lsl #4
  72 0028 0468     		ldr	r4, [r0]
  73 002a 6405     		lsls	r4, r4, #21
  74 002c 4C60     		str	r4, [r1, #4]
  75 002e 07E0     		b	.L6
  76              	.L5:
  86:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
  87:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         else
  88:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  89:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_IDE_MASK;
  77              		.loc 1 89 0
  78 0030 43F48013 		orr	r3, r3, #1048576
  79              	.LVL6:
  90:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_EXTENDED_MSG(i, message->id);
  80              		.loc 1 90 0
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 4


  81 0034 2649     		ldr	r1, .L22+4
  82 0036 01EB0211 		add	r1, r1, r2, lsl #4
  83 003a 0468     		ldr	r4, [r0]
  84 003c E400     		lsls	r4, r4, #3
  85 003e 4C60     		str	r4, [r1, #4]
  86              	.L6:
  91:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
  92:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  93:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         if (message->dlc < CAN_TX_DLC_MAX_VALUE)
  87              		.loc 1 93 0
  88 0040 90F806E0 		ldrb	lr, [r0, #6]	@ zero_extendqisi2
  89 0044 BEF1070F 		cmp	lr, #7
  90 0048 02D8     		bhi	.L7
  94:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  95:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp |= ((uint32) message->dlc) << CAN_TWO_BYTE_OFFSET;
  91              		.loc 1 95 0
  92 004a 43EA0E4E 		orr	lr, r3, lr, lsl #16
  93              	.LVL7:
  94 004e 01E0     		b	.L8
  95              	.LVL8:
  96              	.L7:
  96:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
  97:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         else
  98:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  99:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_DLC_UPPER_VALUE;
  97              		.loc 1 99 0
  98 0050 43F4002E 		orr	lr, r3, #524288
  99              	.LVL9:
 100              	.L8:
 100:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
 101:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 102:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         if (message->irq != CAN_TRANSMIT_INT_DISABLE)
 101              		.loc 1 102 0
 102 0054 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 103 0056 0BB1     		cbz	r3, .L9
 103:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 104:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_INT_ENABLE_MASK;    /* Transmit Interrupt Enable */
 104              		.loc 1 104 0
 105 0058 4EF0040E 		orr	lr, lr, #4
 106              	.LVL10:
 107              	.L9:
 105:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
 106:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 107:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         for (j = 0u; (j < message->dlc) && (j < CAN_TX_DLC_MAX_VALUE); j++)
 108              		.loc 1 107 0
 109 005c 0023     		movs	r3, #0
 110 005e 0FE0     		b	.L10
 111              	.LVL11:
 112              	.L14:
 108:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 109:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             #if (CY_PSOC3 || CY_PSOC5)
 110:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j) = message->msg->byte[j];
 113              		.loc 1 110 0
 114 0060 1B49     		ldr	r1, .L22+4
 115 0062 01EB0214 		add	r4, r1, r2, lsl #4
 116 0066 032B     		cmp	r3, #3
 117 0068 02D9     		bls	.L11
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 5


 118              		.loc 1 110 0 is_stmt 0 discriminator 1
 119 006a C3F10B01 		rsb	r1, r3, #11
 120 006e 01E0     		b	.L12
 121              	.L11:
 122              		.loc 1 110 0 discriminator 2
 123 0070 C3F10301 		rsb	r1, r3, #3
 124              	.L12:
 125              		.loc 1 110 0 discriminator 4
 126 0074 8568     		ldr	r5, [r0, #8]
 127 0076 ED5C     		ldrb	r5, [r5, r3]	@ zero_extendqisi2
 128 0078 2144     		add	r1, r1, r4
 129 007a 0D72     		strb	r5, [r1, #8]
 107:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 130              		.loc 1 107 0 is_stmt 1 discriminator 4
 131 007c 0133     		adds	r3, r3, #1
 132              	.LVL12:
 133 007e DBB2     		uxtb	r3, r3
 134              	.LVL13:
 135              	.L10:
 107:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 136              		.loc 1 107 0 is_stmt 0 discriminator 2
 137 0080 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 138 0082 8B42     		cmp	r3, r1
 139 0084 01D2     		bcs	.L13
 107:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 140              		.loc 1 107 0 discriminator 3
 141 0086 072B     		cmp	r3, #7
 142 0088 EAD9     		bls	.L14
 143              	.L13:
 111:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             #else /* CY_PSOC4 */
 112:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j, message->msg->byte[j]);
 113:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             #endif /* CY_PSOC3 || CY_PSOC5 */
 114:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
 115:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 116:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         /* Disable isr */
 117:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     CyIntDisable(CAN_ISR_NUMBER);
 144              		.loc 1 117 0 is_stmt 1
 145 008a 4FF48034 		mov	r4, #65536
 146 008e 114B     		ldr	r3, .L22+8
 147              	.LVL14:
 148 0090 1C60     		str	r4, [r3]
 118:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 119:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         /* WPN[23] and WPN[3] set to 1 for write to CAN Control reg */
 120:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         CY_SET_REG32(CAN_TX_CMD_PTR(i), (regTemp | CAN_TX_WPN_SET));
 149              		.loc 1 120 0
 150 0092 1101     		lsls	r1, r2, #4
 151 0094 0E4D     		ldr	r5, .L22+4
 152 0096 4EF40003 		orr	r3, lr, #8388608
 153 009a 43F00803 		orr	r3, r3, #8
 154 009e 4B51     		str	r3, [r1, r5]
 121:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 122:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         #if (CY_PSOC3 || CY_PSOC5)
 123:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             CY_SET_REG32(CAN_TX_CMD_PTR(i), CAN_SEND_MESSAGE);
 155              		.loc 1 123 0
 156 00a0 0123     		movs	r3, #1
 157 00a2 4B51     		str	r3, [r1, r5]
 124:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         #else /* CY_PSOC4 */
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 6


 125:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             if (message->sst != CAN_STANDARD_MESSAGE)
 126:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             {
 127:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 /* Single Shot Transmission */
 128:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE |
 129:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_ABORT_MASK;
 130:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             }
 131:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             else
 132:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             {
 133:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE;
 134:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             }
 135:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         #endif /* CY_PSOC3 || CY_PSOC5 */
 136:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 137:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         /* Enable isr */
 138:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     CyIntEnable(CAN_ISR_NUMBER);
 158              		.loc 1 138 0
 159 00a4 0C4B     		ldr	r3, .L22+12
 160 00a6 1C60     		str	r4, [r3]
 161              	.LVL15:
 139:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 140:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         result = CYRET_SUCCESS;
 162              		.loc 1 140 0
 163 00a8 0021     		movs	r1, #0
 164              	.LVL16:
 165              	.L3:
 141:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     }
 142:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 143:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             shift <<= 1u;
 166              		.loc 1 143 0
 167 00aa 7B00     		lsls	r3, r7, #1
 168 00ac DFB2     		uxtb	r7, r3
 169              	.LVL17:
 144:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if (result == CYRET_SUCCESS)
 170              		.loc 1 144 0
 171 00ae 31B1     		cbz	r1, .L15
  62:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 172              		.loc 1 62 0 discriminator 2
 173 00b0 0132     		adds	r2, r2, #1
 174              	.LVL18:
 175 00b2 D2B2     		uxtb	r2, r2
 176              	.LVL19:
 177 00b4 01E0     		b	.L18
 178              	.LVL20:
 179              	.L20:
 180 00b6 0127     		movs	r7, #1
 181 00b8 0022     		movs	r2, #0
 182              	.L18:
 183              	.LVL21:
  62:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 184              		.loc 1 62 0 is_stmt 0 discriminator 1
 185 00ba 072A     		cmp	r2, #7
 186 00bc A4D9     		bls	.L16
 187              	.L15:
 145:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 146:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 break;
 147:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 148:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         }
 149:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         if (result == CYRET_SUCCESS)
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 7


 188              		.loc 1 149 0 is_stmt 1
 189 00be 19B1     		cbz	r1, .L17
 150:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 151:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             break;
 152:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         }
 153:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         else
 154:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 155:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             retry++;
 190              		.loc 1 155 0
 191 00c0 0136     		adds	r6, r6, #1
 192              	.LVL22:
 193 00c2 F6B2     		uxtb	r6, r6
 194              	.LVL23:
 195              	.L2:
  59:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 196              		.loc 1 59 0
 197 00c4 022E     		cmp	r6, #2
 198 00c6 F6D9     		bls	.L20
 199              	.L17:
 156:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         }
 157:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 158:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 159:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     return (result);
 160:Generated_Source\PSoC5/CAN_TX_RX_func.c **** }
 200              		.loc 1 160 0
 201 00c8 0846     		mov	r0, r1
 202              	.LVL24:
 203 00ca F0BD     		pop	{r4, r5, r6, r7, pc}
 204              	.LVL25:
 205              	.L23:
 206              		.align	2
 207              	.L22:
 208 00cc 08A00040 		.word	1073782792
 209 00d0 20A00040 		.word	1073782816
 210 00d4 80E100E0 		.word	-536813184
 211 00d8 00E100E0 		.word	-536813312
 212              		.cfi_endproc
 213              	.LFE0:
 214              		.size	CAN_SendMsg, .-CAN_SendMsg
 215              		.section	.text.CAN_TxCancel,"ax",%progbits
 216              		.align	2
 217              		.global	CAN_TxCancel
 218              		.thumb
 219              		.thumb_func
 220              		.type	CAN_TxCancel, %function
 221              	CAN_TxCancel:
 222              	.LFB1:
 161:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 162:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 163:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_TxCancel
 165:Generated_Source\PSoC5/CAN_TX_RX_func.c **** ********************************************************************************
 166:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 167:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Summary:
 168:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  This function cancels transmission of a message that has been queued to be
 169:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  transmitted. Values between 0 and 7 are valid.
 170:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 8


 171:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Parameters:
 172:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  bufferId: The mailbox number.
 173:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 174:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Return:
 175:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  None.
 176:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 177:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *******************************************************************************/
 178:Generated_Source\PSoC5/CAN_TX_RX_func.c **** void CAN_TxCancel(uint8 bufferId) 
 179:Generated_Source\PSoC5/CAN_TX_RX_func.c **** {
 223              		.loc 1 179 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 228              	.LVL26:
 180:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     if (bufferId < CAN_NUMBER_OF_TX_MAILBOXES)
 229              		.loc 1 180 0
 230 0000 0728     		cmp	r0, #7
 231 0002 07D8     		bhi	.L24
 181:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 182:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         CAN_TX_ABORT_MESSAGE(bufferId);
 232              		.loc 1 182 0
 233 0004 0001     		lsls	r0, r0, #4
 234              	.LVL27:
 235 0006 044A     		ldr	r2, .L26
 236 0008 835C     		ldrb	r3, [r0, r2]	@ zero_extendqisi2
 237 000a 03F0FC03 		and	r3, r3, #252
 238 000e 43F00203 		orr	r3, r3, #2
 239 0012 8354     		strb	r3, [r0, r2]
 240              	.L24:
 241 0014 7047     		bx	lr
 242              	.L27:
 243 0016 00BF     		.align	2
 244              	.L26:
 245 0018 20A00040 		.word	1073782816
 246              		.cfi_endproc
 247              	.LFE1:
 248              		.size	CAN_TxCancel, .-CAN_TxCancel
 249              		.section	.text.CAN_SendMsgTORQUE_REQUEST_COMMAND,"ax",%progbits
 250              		.align	2
 251              		.global	CAN_SendMsgTORQUE_REQUEST_COMMAND
 252              		.thumb
 253              		.thumb_func
 254              		.type	CAN_SendMsgTORQUE_REQUEST_COMMAND, %function
 255              	CAN_SendMsgTORQUE_REQUEST_COMMAND:
 256              	.LFB2:
 183:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 184:Generated_Source\PSoC5/CAN_TX_RX_func.c **** }
 185:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 186:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 187:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX0_FUNC_ENABLE)
 188:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 189:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsgTORQUE_REQUEST_COMMAND
 190:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 191:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 192:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 193:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 0. The function checks
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 9


 194:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 0 doesn't already have un-transmitted messages waiting for
 195:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 196:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 197:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 198:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 199:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 200:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 201:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 202:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 203:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 204:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 205:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 206:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 207:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 208:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsgTORQUE_REQUEST_COMMAND(void) 
 209:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 257              		.loc 1 209 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              		@ link register save eliminated.
 262              	.LVL28:
 210:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 211:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 212:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 213:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[0u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 263              		.loc 1 213 0
 264 0000 064B     		ldr	r3, .L31
 265 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 266 0004 13F0010F 		tst	r3, #1
 267 0008 06D1     		bne	.L30
 214:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 215:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(0u) & CAN_TX_REQUEST_PENDING) != 0u)
 216:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 217:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 218:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 219:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 220:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 221:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 222:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_TORQUE_REQUEST_COMMAND_TRASMITTED` */
 223:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 224:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 225:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 226:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_TORQUE_REQUEST_COMMAND_CALLBACK
 227:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_TORQUE_REQUEST_COMMAND_Callback();
 228:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_TORQUE_REQUEST_COMMAND_CALLBACK */
 229:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 230:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(0u),
 268              		.loc 1 230 0
 269 000a 044A     		ldr	r2, .L31
 270 000c 1368     		ldr	r3, [r2]
 271 000e 43F00103 		orr	r3, r3, #1
 272 0012 1360     		str	r3, [r2]
 210:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 273              		.loc 1 210 0
 274 0014 0020     		movs	r0, #0
 275 0016 7047     		bx	lr
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 10


 276              	.L30:
 218:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 277              		.loc 1 218 0
 278 0018 0120     		movs	r0, #1
 279              	.LVL29:
 231:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(0u)) | CAN_SEND_MESSAGE);
 232:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 233:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 234:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 235:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 280              		.loc 1 235 0
 281 001a 7047     		bx	lr
 282              	.L32:
 283              		.align	2
 284              	.L31:
 285 001c 20A00040 		.word	1073782816
 286              		.cfi_endproc
 287              	.LFE2:
 288              		.size	CAN_SendMsgTORQUE_REQUEST_COMMAND, .-CAN_SendMsgTORQUE_REQUEST_COMMAND
 289              		.section	.text.CAN_SendMsgPEI_CURRENT,"ax",%progbits
 290              		.align	2
 291              		.global	CAN_SendMsgPEI_CURRENT
 292              		.thumb
 293              		.thumb_func
 294              		.type	CAN_SendMsgPEI_CURRENT, %function
 295              	CAN_SendMsgPEI_CURRENT:
 296              	.LFB3:
 236:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX0_FUNC_ENABLE */
 237:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 238:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 239:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX1_FUNC_ENABLE)
 240:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 241:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsgPEI_CURRENT
 242:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 243:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 244:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 245:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 1. The function checks
 246:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 1 doesn't already have un-transmitted messages waiting for
 247:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 248:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 249:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 250:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 251:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 252:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 253:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 254:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 255:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 256:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 257:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 258:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 259:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 260:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsgPEI_CURRENT(void) 
 261:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 297              		.loc 1 261 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 11


 301              		@ link register save eliminated.
 302              	.LVL30:
 262:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 263:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 264:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 265:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[1u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 303              		.loc 1 265 0
 304 0000 064B     		ldr	r3, .L36
 305 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306 0004 13F0010F 		tst	r3, #1
 307 0008 06D1     		bne	.L35
 266:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 267:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(1u) & CAN_TX_REQUEST_PENDING) != 0u)
 268:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 269:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 270:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 271:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 272:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 273:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 274:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_PEI_CURRENT_TRASMITTED` */
 275:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 276:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 277:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 278:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_PEI_CURRENT_CALLBACK
 279:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_PEI_CURRENT_Callback();
 280:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_PEI_CURRENT_CALLBACK */
 281:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 282:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(1u),
 308              		.loc 1 282 0
 309 000a 044A     		ldr	r2, .L36
 310 000c 1368     		ldr	r3, [r2]
 311 000e 43F00103 		orr	r3, r3, #1
 312 0012 1360     		str	r3, [r2]
 262:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 313              		.loc 1 262 0
 314 0014 0020     		movs	r0, #0
 315 0016 7047     		bx	lr
 316              	.L35:
 270:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 317              		.loc 1 270 0
 318 0018 0120     		movs	r0, #1
 319              	.LVL31:
 283:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(1u)) | CAN_SEND_MESSAGE);
 284:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 285:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 286:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 287:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 320              		.loc 1 287 0
 321 001a 7047     		bx	lr
 322              	.L37:
 323              		.align	2
 324              	.L36:
 325 001c 30A00040 		.word	1073782832
 326              		.cfi_endproc
 327              	.LFE3:
 328              		.size	CAN_SendMsgPEI_CURRENT, .-CAN_SendMsgPEI_CURRENT
 329              		.section	.text.CAN_SendMsgMC_ESTOP,"ax",%progbits
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 12


 330              		.align	2
 331              		.global	CAN_SendMsgMC_ESTOP
 332              		.thumb
 333              		.thumb_func
 334              		.type	CAN_SendMsgMC_ESTOP, %function
 335              	CAN_SendMsgMC_ESTOP:
 336              	.LFB4:
 288:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX1_FUNC_ENABLE */
 289:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 290:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 291:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX2_FUNC_ENABLE)
 292:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 293:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsgMC_ESTOP
 294:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 295:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 296:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 297:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 2. The function checks
 298:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 2 doesn't already have un-transmitted messages waiting for
 299:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 300:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 301:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 302:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 303:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 304:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 305:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 306:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 307:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 308:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 309:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 310:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 311:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 312:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsgMC_ESTOP(void) 
 313:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 337              		.loc 1 313 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341              		@ link register save eliminated.
 342              	.LVL32:
 314:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 315:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 316:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 317:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[2u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 343              		.loc 1 317 0
 344 0000 064B     		ldr	r3, .L41
 345 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 346 0004 13F0010F 		tst	r3, #1
 347 0008 06D1     		bne	.L40
 318:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 319:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(2u) & CAN_TX_REQUEST_PENDING) != 0u)
 320:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 321:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 322:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 323:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 324:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 325:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 326:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_MC_ESTOP_TRASMITTED` */
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 13


 327:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 328:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 329:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 330:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_MC_ESTOP_CALLBACK
 331:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_MC_ESTOP_Callback();
 332:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_MC_ESTOP_CALLBACK */
 333:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 334:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(2u),
 348              		.loc 1 334 0
 349 000a 044A     		ldr	r2, .L41
 350 000c 1368     		ldr	r3, [r2]
 351 000e 43F00103 		orr	r3, r3, #1
 352 0012 1360     		str	r3, [r2]
 314:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 353              		.loc 1 314 0
 354 0014 0020     		movs	r0, #0
 355 0016 7047     		bx	lr
 356              	.L40:
 322:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 357              		.loc 1 322 0
 358 0018 0120     		movs	r0, #1
 359              	.LVL33:
 335:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(2u)) | CAN_SEND_MESSAGE);
 336:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 337:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 338:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 339:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 360              		.loc 1 339 0
 361 001a 7047     		bx	lr
 362              	.L42:
 363              		.align	2
 364              	.L41:
 365 001c 40A00040 		.word	1073782848
 366              		.cfi_endproc
 367              	.LFE4:
 368              		.size	CAN_SendMsgMC_ESTOP, .-CAN_SendMsgMC_ESTOP
 369              		.section	.text.CAN_SendMsgMC_DEBUG,"ax",%progbits
 370              		.align	2
 371              		.global	CAN_SendMsgMC_DEBUG
 372              		.thumb
 373              		.thumb_func
 374              		.type	CAN_SendMsgMC_DEBUG, %function
 375              	CAN_SendMsgMC_DEBUG:
 376              	.LFB5:
 340:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX2_FUNC_ENABLE */
 341:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 342:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 343:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX3_FUNC_ENABLE)
 344:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 345:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsgMC_DEBUG
 346:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 347:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 348:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 349:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 3. The function checks
 350:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 3 doesn't already have un-transmitted messages waiting for
 351:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 352:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 14


 353:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 354:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 355:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 356:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 357:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 358:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 359:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 360:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 361:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 362:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 363:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsgMC_DEBUG(void) 
 365:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 377              		.loc 1 365 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 382              	.LVL34:
 366:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 367:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 368:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 369:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[3u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 383              		.loc 1 369 0
 384 0000 064B     		ldr	r3, .L46
 385 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 386 0004 13F0010F 		tst	r3, #1
 387 0008 06D1     		bne	.L45
 370:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 371:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(3u) & CAN_TX_REQUEST_PENDING) != 0u)
 372:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 373:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 374:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 375:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 376:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 377:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 378:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_MC_DEBUG_TRASMITTED` */
 379:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 380:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 381:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 382:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_MC_DEBUG_CALLBACK
 383:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_MC_DEBUG_Callback();
 384:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_MC_DEBUG_CALLBACK */
 385:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 386:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(3u),
 388              		.loc 1 386 0
 389 000a 044A     		ldr	r2, .L46
 390 000c 1368     		ldr	r3, [r2]
 391 000e 43F00103 		orr	r3, r3, #1
 392 0012 1360     		str	r3, [r2]
 366:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 393              		.loc 1 366 0
 394 0014 0020     		movs	r0, #0
 395 0016 7047     		bx	lr
 396              	.L45:
 374:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 397              		.loc 1 374 0
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 15


 398 0018 0120     		movs	r0, #1
 399              	.LVL35:
 387:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(3u)) | CAN_SEND_MESSAGE);
 388:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 389:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 390:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 391:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 400              		.loc 1 391 0
 401 001a 7047     		bx	lr
 402              	.L47:
 403              		.align	2
 404              	.L46:
 405 001c 50A00040 		.word	1073782864
 406              		.cfi_endproc
 407              	.LFE5:
 408              		.size	CAN_SendMsgMC_DEBUG, .-CAN_SendMsgMC_DEBUG
 409              		.section	.text.CAN_ReceiveMsg,"ax",%progbits
 410              		.align	2
 411              		.global	CAN_ReceiveMsg
 412              		.thumb
 413              		.thumb_func
 414              		.type	CAN_ReceiveMsg, %function
 415              	CAN_ReceiveMsg:
 416              	.LFB6:
 392:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX3_FUNC_ENABLE */
 393:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 394:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 395:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX4_FUNC_ENABLE)
 396:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 397:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg4
 398:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 399:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 400:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 401:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 4. The function checks
 402:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 4 doesn't already have un-transmitted messages waiting for
 403:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 404:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 405:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 406:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 407:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 408:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 409:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 410:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 411:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 412:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 413:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 414:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 415:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 416:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg4(void) 
 417:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 418:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 419:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 420:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 421:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[4u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 422:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 423:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(4u) & CAN_TX_REQUEST_PENDING) != 0u)
 424:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 16


 425:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 426:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 427:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 428:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 429:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 430:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_4_TRASMITTED` */
 431:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 432:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 433:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 434:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_4_CALLBACK
 435:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_4_Callback();
 436:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_4_CALLBACK */
 437:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 438:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(4u),
 439:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(4u)) | CAN_SEND_MESSAGE);
 440:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 441:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 442:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 443:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 444:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX4_FUNC_ENABLE */
 445:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 446:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 447:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX5_FUNC_ENABLE)
 448:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 449:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg5
 450:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 451:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 452:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 453:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 5. The function checks
 454:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 5 doesn't already have un-transmitted messages waiting for
 455:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 456:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 457:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 458:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 459:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 460:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 461:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 462:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 463:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 464:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 465:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 466:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 467:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 468:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg5(void) 
 469:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 470:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 471:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 472:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 473:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[5u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 474:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 475:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(5u) & CAN_TX_REQUEST_PENDING) != 0u)
 476:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 477:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 478:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 479:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 480:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 481:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 17


 482:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_5_TRASMITTED` */
 483:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 484:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 485:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 486:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_5_CALLBACK
 487:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_5_Callback();
 488:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_5_CALLBACK */
 489:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 490:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(5u),
 491:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(5u)) | CAN_SEND_MESSAGE);
 492:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 493:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 494:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 495:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 496:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX5_FUNC_ENABLE */
 497:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 498:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 499:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX6_FUNC_ENABLE)
 500:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 501:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg6
 502:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 503:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 504:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 505:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 6. The function checks
 506:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 6 doesn't already have un-transmitted messages waiting for
 507:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 508:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 509:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 510:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 511:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 512:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 513:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 514:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 515:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 516:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 517:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 518:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 519:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 520:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg6(void) 
 521:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 522:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 523:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 524:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 525:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[6u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 526:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 527:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(6u) & CAN_TX_REQUEST_PENDING) != 0u)
 528:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 529:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 530:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 531:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 532:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 533:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 534:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_6_TRASMITTED` */
 535:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 536:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 537:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 538:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_6_CALLBACK
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 18


 539:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_6_Callback();
 540:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_6_CALLBACK */
 541:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 542:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(6u),
 543:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(6u)) | CAN_SEND_MESSAGE);
 544:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 545:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 546:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 547:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 548:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX6_FUNC_ENABLE */
 549:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 550:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 551:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX7_FUNC_ENABLE)
 552:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 553:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg7)
 554:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 555:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 556:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 557:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 7. The function checks
 558:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 7 doesn't already have un-transmitted messages waiting for
 559:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 560:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 561:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 562:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 563:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 564:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 565:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 566:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 567:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 568:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 569:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 570:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 571:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 572:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg7(void) 
 573:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 574:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 575:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 576:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 577:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[7u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 578:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 579:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(7u) & CAN_TX_REQUEST_PENDING) != 0u)
 580:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 581:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 582:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 583:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 584:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 585:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 586:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_7_TRASMITTED` */
 587:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 588:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 589:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 590:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_7_CALLBACK
 591:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_7_Callback();
 592:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_7_CALLBACK */
 593:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 594:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(7u),
 595:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(7u)) | CAN_SEND_MESSAGE);
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 19


 596:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 597:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 598:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 599:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 600:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX7_FUNC_ENABLE */
 601:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 602:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 603:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /*******************************************************************************
 604:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_ReceiveMsg
 605:Generated_Source\PSoC5/CAN_TX_RX_func.c **** ********************************************************************************
 606:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 607:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Summary:
 608:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  This function is the entry point to Receive Message Interrupt for Basic
 609:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  mailboxes. Clears the Receive particular Message interrupt flag. Generated
 610:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  only if one of the Receive mailboxes is designed as Basic.
 611:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 612:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Parameters:
 613:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  rxMailbox: The mailbox number that trig Receive Message Interrupt.
 614:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 615:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Return:
 616:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  None.
 617:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 618:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Reentrant:
 619:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  Depends on the Customer code.
 620:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 621:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *******************************************************************************/
 622:Generated_Source\PSoC5/CAN_TX_RX_func.c **** void CAN_ReceiveMsg(uint8 rxMailbox) 
 623:Generated_Source\PSoC5/CAN_TX_RX_func.c **** {
 417              		.loc 1 623 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              		@ link register save eliminated.
 422              	.LVL36:
 624:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     #if (CY_PSOC3 || CY_PSOC5)
 625:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         if ((CAN_RX[rxMailbox].rxcmd.byte[0u] & CAN_RX_ACK_MSG) != 0u)
 423              		.loc 1 625 0
 424 0000 4001     		lsls	r0, r0, #5
 425              	.LVL37:
 426 0002 054B     		ldr	r3, .L50
 427 0004 C25C     		ldrb	r2, [r0, r3]	@ zero_extendqisi2
 428 0006 12F0010F 		tst	r2, #1
 429 000a 03D0     		beq	.L48
 626:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     #else  /* CY_PSOC4 */
 627:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         if ((CAN_RX_CMD_REG(rxMailbox) & CAN_RX_ACK_MSG) != 0u)
 628:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     #endif /* CY_PSOC3 || CY_PSOC5 */
 629:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 630:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             /* `#START MESSAGE_BASIC_RECEIVED` */
 631:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 632:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             /* `#END` */
 633:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 634:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #ifdef CAN_RECEIVE_MSG_CALLBACK
 635:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CAN_ReceiveMsg_Callback();
 636:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #endif /* CAN_RECEIVE_MSG_CALLBACK */
 637:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 638:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #if (CY_PSOC3 || CY_PSOC5)
 639:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CAN_RX[rxMailbox].rxcmd.byte[0u] |= CAN_RX_ACK_MSG;
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 20


 430              		.loc 1 639 0
 431 000c C25C     		ldrb	r2, [r0, r3]	@ zero_extendqisi2
 432 000e 42F00102 		orr	r2, r2, #1
 433 0012 C254     		strb	r2, [r0, r3]
 434              	.L48:
 435 0014 7047     		bx	lr
 436              	.L51:
 437 0016 00BF     		.align	2
 438              	.L50:
 439 0018 A0A00040 		.word	1073782944
 440              		.cfi_endproc
 441              	.LFE6:
 442              		.size	CAN_ReceiveMsg, .-CAN_ReceiveMsg
 443              		.section	.text.CAN_ReceiveMsgTorque_Request_Command,"ax",%progbits
 444              		.align	2
 445              		.global	CAN_ReceiveMsgTorque_Request_Command
 446              		.thumb
 447              		.thumb_func
 448              		.type	CAN_ReceiveMsgTorque_Request_Command, %function
 449              	CAN_ReceiveMsgTorque_Request_Command:
 450              	.LFB7:
 640:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #else  /* CY_PSOC4 */
 641:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CAN_RX_CMD_REG(rxMailbox) |= CAN_RX_ACK_MSG;
 642:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #endif /* CY_PSOC3 || CY_PSOC5 */
 643:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         }
 644:Generated_Source\PSoC5/CAN_TX_RX_func.c **** }
 645:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 646:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 647:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_RX0_FUNC_ENABLE)
 648:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 649:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_ReceiveMsgTorque_Request_Command
 650:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 651:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 652:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 653:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Receive Message 0 Interrupt. Clears the
 654:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Receive Message 0 interrupt flag. Generated only for the Receive mailbox
 655:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  designed as Full.
 656:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 657:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 658:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 659:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 660:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 661:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 662:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 663:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Reentrant:
 664:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Depends on the Customer code.
 665:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 666:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 667:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     void CAN_ReceiveMsgTorque_Request_Command(void) 
 668:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 451              		.loc 1 668 0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455              		@ link register save eliminated.
 669:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         /* `#START MESSAGE_Torque_Request_Command_RECEIVED` */
 670:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 21


 671:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         /* `#END` */
 672:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 673:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #ifdef CAN_RECEIVE_MSG_Torque_Request_Command_CALLBACK
 674:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             CAN_ReceiveMsg_Torque_Request_Command_Callback();
 675:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CAN_RECEIVE_MSG_Torque_Request_Command_CALLBACK */
 676:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 677:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         CAN_RX[0u].rxcmd.byte[0u] |= CAN_RX_ACK_MSG;
 456              		.loc 1 677 0
 457 0000 024A     		ldr	r2, .L53
 458 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 459 0004 43F00103 		orr	r3, r3, #1
 460 0008 1370     		strb	r3, [r2]
 461 000a 7047     		bx	lr
 462              	.L54:
 463              		.align	2
 464              	.L53:
 465 000c A0A00040 		.word	1073782944
 466              		.cfi_endproc
 467              	.LFE7:
 468              		.size	CAN_ReceiveMsgTorque_Request_Command, .-CAN_ReceiveMsgTorque_Request_Command
 469              		.text
 470              	.Letext0:
 471              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 472              		.file 3 "Generated_Source\\PSoC5\\CAN.h"
 473              		.section	.debug_info,"",%progbits
 474              	.Ldebug_info0:
 475 0000 F2030000 		.4byte	0x3f2
 476 0004 0400     		.2byte	0x4
 477 0006 00000000 		.4byte	.Ldebug_abbrev0
 478 000a 04       		.byte	0x4
 479 000b 01       		.uleb128 0x1
 480 000c E4010000 		.4byte	.LASF49
 481 0010 0C       		.byte	0xc
 482 0011 51000000 		.4byte	.LASF50
 483 0015 BD020000 		.4byte	.LASF51
 484 0019 00000000 		.4byte	.Ldebug_ranges0+0
 485 001d 00000000 		.4byte	0
 486 0021 00000000 		.4byte	.Ldebug_line0
 487 0025 02       		.uleb128 0x2
 488 0026 01       		.byte	0x1
 489 0027 06       		.byte	0x6
 490 0028 26030000 		.4byte	.LASF0
 491 002c 02       		.uleb128 0x2
 492 002d 01       		.byte	0x1
 493 002e 08       		.byte	0x8
 494 002f CB000000 		.4byte	.LASF1
 495 0033 02       		.uleb128 0x2
 496 0034 02       		.byte	0x2
 497 0035 05       		.byte	0x5
 498 0036 6B010000 		.4byte	.LASF2
 499 003a 02       		.uleb128 0x2
 500 003b 02       		.byte	0x2
 501 003c 07       		.byte	0x7
 502 003d 33000000 		.4byte	.LASF3
 503 0041 02       		.uleb128 0x2
 504 0042 04       		.byte	0x4
 505 0043 05       		.byte	0x5
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 22


 506 0044 11030000 		.4byte	.LASF4
 507 0048 02       		.uleb128 0x2
 508 0049 04       		.byte	0x4
 509 004a 07       		.byte	0x7
 510 004b 0F010000 		.4byte	.LASF5
 511 004f 02       		.uleb128 0x2
 512 0050 08       		.byte	0x8
 513 0051 05       		.byte	0x5
 514 0052 82020000 		.4byte	.LASF6
 515 0056 02       		.uleb128 0x2
 516 0057 08       		.byte	0x8
 517 0058 07       		.byte	0x7
 518 0059 8E010000 		.4byte	.LASF7
 519 005d 03       		.uleb128 0x3
 520 005e 04       		.byte	0x4
 521 005f 05       		.byte	0x5
 522 0060 696E7400 		.ascii	"int\000"
 523 0064 02       		.uleb128 0x2
 524 0065 04       		.byte	0x4
 525 0066 07       		.byte	0x7
 526 0067 81010000 		.4byte	.LASF8
 527 006b 04       		.uleb128 0x4
 528 006c 21010000 		.4byte	.LASF9
 529 0070 02       		.byte	0x2
 530 0071 E801     		.2byte	0x1e8
 531 0073 2C000000 		.4byte	0x2c
 532 0077 04       		.uleb128 0x4
 533 0078 7A010000 		.4byte	.LASF10
 534 007c 02       		.byte	0x2
 535 007d EA01     		.2byte	0x1ea
 536 007f 48000000 		.4byte	0x48
 537 0083 02       		.uleb128 0x2
 538 0084 04       		.byte	0x4
 539 0085 04       		.byte	0x4
 540 0086 AE000000 		.4byte	.LASF11
 541 008a 02       		.uleb128 0x2
 542 008b 08       		.byte	0x8
 543 008c 04       		.byte	0x4
 544 008d 5C010000 		.4byte	.LASF12
 545 0091 02       		.uleb128 0x2
 546 0092 01       		.byte	0x1
 547 0093 08       		.byte	0x8
 548 0094 4C000000 		.4byte	.LASF13
 549 0098 04       		.uleb128 0x4
 550 0099 E5000000 		.4byte	.LASF14
 551 009d 02       		.byte	0x2
 552 009e 9202     		.2byte	0x292
 553 00a0 A4000000 		.4byte	0xa4
 554 00a4 05       		.uleb128 0x5
 555 00a5 6B000000 		.4byte	0x6b
 556 00a9 04       		.uleb128 0x4
 557 00aa D9000000 		.4byte	.LASF15
 558 00ae 02       		.byte	0x2
 559 00af 9402     		.2byte	0x294
 560 00b1 B5000000 		.4byte	0xb5
 561 00b5 05       		.uleb128 0x5
 562 00b6 77000000 		.4byte	0x77
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 23


 563 00ba 02       		.uleb128 0x2
 564 00bb 08       		.byte	0x8
 565 00bc 04       		.byte	0x4
 566 00bd 1A030000 		.4byte	.LASF16
 567 00c1 02       		.uleb128 0x2
 568 00c2 04       		.byte	0x4
 569 00c3 07       		.byte	0x7
 570 00c4 72020000 		.4byte	.LASF17
 571 00c8 06       		.uleb128 0x6
 572 00c9 08       		.byte	0x8
 573 00ca 03       		.byte	0x3
 574 00cb 6F       		.byte	0x6f
 575 00cc DD000000 		.4byte	0xdd
 576 00d0 07       		.uleb128 0x7
 577 00d1 79000000 		.4byte	.LASF19
 578 00d5 03       		.byte	0x3
 579 00d6 71       		.byte	0x71
 580 00d7 DD000000 		.4byte	0xdd
 581 00db 00       		.byte	0
 582 00dc 00       		.byte	0
 583 00dd 08       		.uleb128 0x8
 584 00de 6B000000 		.4byte	0x6b
 585 00e2 ED000000 		.4byte	0xed
 586 00e6 09       		.uleb128 0x9
 587 00e7 C1000000 		.4byte	0xc1
 588 00eb 07       		.byte	0x7
 589 00ec 00       		.byte	0
 590 00ed 0A       		.uleb128 0xa
 591 00ee 27010000 		.4byte	.LASF18
 592 00f2 03       		.byte	0x3
 593 00f3 72       		.byte	0x72
 594 00f4 C8000000 		.4byte	0xc8
 595 00f8 06       		.uleb128 0x6
 596 00f9 08       		.byte	0x8
 597 00fa 03       		.byte	0x3
 598 00fb 75       		.byte	0x75
 599 00fc 0D010000 		.4byte	0x10d
 600 0100 07       		.uleb128 0x7
 601 0101 79000000 		.4byte	.LASF19
 602 0105 03       		.byte	0x3
 603 0106 77       		.byte	0x77
 604 0107 1D010000 		.4byte	0x11d
 605 010b 00       		.byte	0
 606 010c 00       		.byte	0
 607 010d 08       		.uleb128 0x8
 608 010e 98000000 		.4byte	0x98
 609 0112 1D010000 		.4byte	0x11d
 610 0116 09       		.uleb128 0x9
 611 0117 C1000000 		.4byte	0xc1
 612 011b 07       		.byte	0x7
 613 011c 00       		.byte	0
 614 011d 05       		.uleb128 0x5
 615 011e 0D010000 		.4byte	0x10d
 616 0122 0A       		.uleb128 0xa
 617 0123 0E000000 		.4byte	.LASF20
 618 0127 03       		.byte	0x3
 619 0128 78       		.byte	0x78
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 24


 620 0129 F8000000 		.4byte	0xf8
 621 012d 06       		.uleb128 0x6
 622 012e 04       		.byte	0x4
 623 012f 03       		.byte	0x3
 624 0130 7B       		.byte	0x7b
 625 0131 42010000 		.4byte	0x142
 626 0135 07       		.uleb128 0x7
 627 0136 79000000 		.4byte	.LASF19
 628 013a 03       		.byte	0x3
 629 013b 7D       		.byte	0x7d
 630 013c 52010000 		.4byte	0x152
 631 0140 00       		.byte	0
 632 0141 00       		.byte	0
 633 0142 08       		.uleb128 0x8
 634 0143 98000000 		.4byte	0x98
 635 0147 52010000 		.4byte	0x152
 636 014b 09       		.uleb128 0x9
 637 014c C1000000 		.4byte	0xc1
 638 0150 03       		.byte	0x3
 639 0151 00       		.byte	0
 640 0152 05       		.uleb128 0x5
 641 0153 42010000 		.4byte	0x142
 642 0157 0A       		.uleb128 0xa
 643 0158 28000000 		.4byte	.LASF21
 644 015c 03       		.byte	0x3
 645 015d 7E       		.byte	0x7e
 646 015e 2D010000 		.4byte	0x12d
 647 0162 06       		.uleb128 0x6
 648 0163 0C       		.byte	0xc
 649 0164 03       		.byte	0x3
 650 0165 81       		.byte	0x81
 651 0166 B2010000 		.4byte	0x1b2
 652 016a 0B       		.uleb128 0xb
 653 016b 696400   		.ascii	"id\000"
 654 016e 03       		.byte	0x3
 655 016f 83       		.byte	0x83
 656 0170 77000000 		.4byte	0x77
 657 0174 00       		.byte	0
 658 0175 0B       		.uleb128 0xb
 659 0176 72747200 		.ascii	"rtr\000"
 660 017a 03       		.byte	0x3
 661 017b 84       		.byte	0x84
 662 017c 6B000000 		.4byte	0x6b
 663 0180 04       		.byte	0x4
 664 0181 0B       		.uleb128 0xb
 665 0182 69646500 		.ascii	"ide\000"
 666 0186 03       		.byte	0x3
 667 0187 85       		.byte	0x85
 668 0188 6B000000 		.4byte	0x6b
 669 018c 05       		.byte	0x5
 670 018d 0B       		.uleb128 0xb
 671 018e 646C6300 		.ascii	"dlc\000"
 672 0192 03       		.byte	0x3
 673 0193 86       		.byte	0x86
 674 0194 6B000000 		.4byte	0x6b
 675 0198 06       		.byte	0x6
 676 0199 0B       		.uleb128 0xb
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 25


 677 019a 69727100 		.ascii	"irq\000"
 678 019e 03       		.byte	0x3
 679 019f 87       		.byte	0x87
 680 01a0 6B000000 		.4byte	0x6b
 681 01a4 07       		.byte	0x7
 682 01a5 0B       		.uleb128 0xb
 683 01a6 6D736700 		.ascii	"msg\000"
 684 01aa 03       		.byte	0x3
 685 01ab 8B       		.byte	0x8b
 686 01ac B2010000 		.4byte	0x1b2
 687 01b0 08       		.byte	0x8
 688 01b1 00       		.byte	0
 689 01b2 0C       		.uleb128 0xc
 690 01b3 04       		.byte	0x4
 691 01b4 ED000000 		.4byte	0xed
 692 01b8 0A       		.uleb128 0xa
 693 01b9 B4000000 		.4byte	.LASF22
 694 01bd 03       		.byte	0x3
 695 01be 8C       		.byte	0x8c
 696 01bf 62010000 		.4byte	0x162
 697 01c3 06       		.uleb128 0x6
 698 01c4 20       		.byte	0x20
 699 01c5 03       		.byte	0x3
 700 01c6 A0       		.byte	0xa0
 701 01c7 20020000 		.4byte	0x220
 702 01cb 07       		.uleb128 0x7
 703 01cc DE010000 		.4byte	.LASF23
 704 01d0 03       		.byte	0x3
 705 01d1 A2       		.byte	0xa2
 706 01d2 57010000 		.4byte	0x157
 707 01d6 00       		.byte	0
 708 01d7 07       		.uleb128 0x7
 709 01d8 75010000 		.4byte	.LASF24
 710 01dc 03       		.byte	0x3
 711 01dd A3       		.byte	0xa3
 712 01de 57010000 		.4byte	0x157
 713 01e2 04       		.byte	0x4
 714 01e3 07       		.uleb128 0x7
 715 01e4 7E000000 		.4byte	.LASF25
 716 01e8 03       		.byte	0x3
 717 01e9 A4       		.byte	0xa4
 718 01ea 22010000 		.4byte	0x122
 719 01ee 08       		.byte	0x8
 720 01ef 07       		.uleb128 0x7
 721 01f0 22000000 		.4byte	.LASF26
 722 01f4 03       		.byte	0x3
 723 01f5 A5       		.byte	0xa5
 724 01f6 57010000 		.4byte	0x157
 725 01fa 10       		.byte	0x10
 726 01fb 07       		.uleb128 0x7
 727 01fc B7020000 		.4byte	.LASF27
 728 0200 03       		.byte	0x3
 729 0201 A6       		.byte	0xa6
 730 0202 57010000 		.4byte	0x157
 731 0206 14       		.byte	0x14
 732 0207 07       		.uleb128 0x7
 733 0208 7B020000 		.4byte	.LASF28
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 26


 734 020c 03       		.byte	0x3
 735 020d A7       		.byte	0xa7
 736 020e 57010000 		.4byte	0x157
 737 0212 18       		.byte	0x18
 738 0213 07       		.uleb128 0x7
 739 0214 85000000 		.4byte	.LASF29
 740 0218 03       		.byte	0x3
 741 0219 A8       		.byte	0xa8
 742 021a 57010000 		.4byte	0x157
 743 021e 1C       		.byte	0x1c
 744 021f 00       		.byte	0
 745 0220 0A       		.uleb128 0xa
 746 0221 D0010000 		.4byte	.LASF30
 747 0225 03       		.byte	0x3
 748 0226 A9       		.byte	0xa9
 749 0227 C3010000 		.4byte	0x1c3
 750 022b 06       		.uleb128 0x6
 751 022c 10       		.byte	0x10
 752 022d 03       		.byte	0x3
 753 022e AC       		.byte	0xac
 754 022f 58020000 		.4byte	0x258
 755 0233 07       		.uleb128 0x7
 756 0234 46000000 		.4byte	.LASF31
 757 0238 03       		.byte	0x3
 758 0239 AE       		.byte	0xae
 759 023a 57010000 		.4byte	0x157
 760 023e 00       		.byte	0
 761 023f 07       		.uleb128 0x7
 762 0240 1D000000 		.4byte	.LASF32
 763 0244 03       		.byte	0x3
 764 0245 AF       		.byte	0xaf
 765 0246 57010000 		.4byte	0x157
 766 024a 04       		.byte	0x4
 767 024b 07       		.uleb128 0x7
 768 024c 32030000 		.4byte	.LASF33
 769 0250 03       		.byte	0x3
 770 0251 B0       		.byte	0xb0
 771 0252 22010000 		.4byte	0x122
 772 0256 08       		.byte	0x8
 773 0257 00       		.byte	0
 774 0258 0A       		.uleb128 0xa
 775 0259 4E010000 		.4byte	.LASF34
 776 025d 03       		.byte	0x3
 777 025e B1       		.byte	0xb1
 778 025f 2B020000 		.4byte	0x22b
 779 0263 0D       		.uleb128 0xd
 780 0264 BF000000 		.4byte	.LASF41
 781 0268 01       		.byte	0x1
 782 0269 34       		.byte	0x34
 783 026a 6B000000 		.4byte	0x6b
 784 026e 00000000 		.4byte	.LFB0
 785 0272 DC000000 		.4byte	.LFE0-.LFB0
 786 0276 01       		.uleb128 0x1
 787 0277 9C       		.byte	0x9c
 788 0278 E2020000 		.4byte	0x2e2
 789 027c 0E       		.uleb128 0xe
 790 027d 00000000 		.4byte	.LASF39
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 27


 791 0281 01       		.byte	0x1
 792 0282 34       		.byte	0x34
 793 0283 E2020000 		.4byte	0x2e2
 794 0287 00000000 		.4byte	.LLST0
 795 028b 0F       		.uleb128 0xf
 796 028c 6900     		.ascii	"i\000"
 797 028e 01       		.byte	0x1
 798 028f 36       		.byte	0x36
 799 0290 6B000000 		.4byte	0x6b
 800 0294 21000000 		.4byte	.LLST1
 801 0298 0F       		.uleb128 0xf
 802 0299 6A00     		.ascii	"j\000"
 803 029b 01       		.byte	0x1
 804 029c 36       		.byte	0x36
 805 029d 6B000000 		.4byte	0x6b
 806 02a1 4A000000 		.4byte	.LLST2
 807 02a5 10       		.uleb128 0x10
 808 02a6 08000000 		.4byte	.LASF35
 809 02aa 01       		.byte	0x1
 810 02ab 36       		.byte	0x36
 811 02ac 6B000000 		.4byte	0x6b
 812 02b0 74000000 		.4byte	.LLST3
 813 02b4 10       		.uleb128 0x10
 814 02b5 DF000000 		.4byte	.LASF36
 815 02b9 01       		.byte	0x1
 816 02ba 37       		.byte	0x37
 817 02bb 6B000000 		.4byte	0x6b
 818 02bf 92000000 		.4byte	.LLST4
 819 02c3 10       		.uleb128 0x10
 820 02c4 BC010000 		.4byte	.LASF37
 821 02c8 01       		.byte	0x1
 822 02c9 38       		.byte	0x38
 823 02ca 6B000000 		.4byte	0x6b
 824 02ce BC000000 		.4byte	.LLST5
 825 02d2 10       		.uleb128 0x10
 826 02d3 63010000 		.4byte	.LASF38
 827 02d7 01       		.byte	0x1
 828 02d8 39       		.byte	0x39
 829 02d9 77000000 		.4byte	0x77
 830 02dd F2000000 		.4byte	.LLST6
 831 02e1 00       		.byte	0
 832 02e2 0C       		.uleb128 0xc
 833 02e3 04       		.byte	0x4
 834 02e4 E8020000 		.4byte	0x2e8
 835 02e8 11       		.uleb128 0x11
 836 02e9 B8010000 		.4byte	0x1b8
 837 02ed 12       		.uleb128 0x12
 838 02ee C3010000 		.4byte	.LASF46
 839 02f2 01       		.byte	0x1
 840 02f3 B2       		.byte	0xb2
 841 02f4 00000000 		.4byte	.LFB1
 842 02f8 1C000000 		.4byte	.LFE1-.LFB1
 843 02fc 01       		.uleb128 0x1
 844 02fd 9C       		.byte	0x9c
 845 02fe 12030000 		.4byte	0x312
 846 0302 0E       		.uleb128 0xe
 847 0303 90020000 		.4byte	.LASF40
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 28


 848 0307 01       		.byte	0x1
 849 0308 B2       		.byte	0xb2
 850 0309 6B000000 		.4byte	0x6b
 851 030d 32010000 		.4byte	.LLST7
 852 0311 00       		.byte	0
 853 0312 0D       		.uleb128 0xd
 854 0313 8C000000 		.4byte	.LASF42
 855 0317 01       		.byte	0x1
 856 0318 D0       		.byte	0xd0
 857 0319 6B000000 		.4byte	0x6b
 858 031d 00000000 		.4byte	.LFB2
 859 0321 20000000 		.4byte	.LFE2-.LFB2
 860 0325 01       		.uleb128 0x1
 861 0326 9C       		.byte	0x9c
 862 0327 3B030000 		.4byte	0x33b
 863 032b 10       		.uleb128 0x10
 864 032c BC010000 		.4byte	.LASF37
 865 0330 01       		.byte	0x1
 866 0331 D2       		.byte	0xd2
 867 0332 6B000000 		.4byte	0x6b
 868 0336 53010000 		.4byte	.LLST8
 869 033a 00       		.byte	0
 870 033b 13       		.uleb128 0x13
 871 033c A5010000 		.4byte	.LASF43
 872 0340 01       		.byte	0x1
 873 0341 0401     		.2byte	0x104
 874 0343 6B000000 		.4byte	0x6b
 875 0347 00000000 		.4byte	.LFB3
 876 034b 20000000 		.4byte	.LFE3-.LFB3
 877 034f 01       		.uleb128 0x1
 878 0350 9C       		.byte	0x9c
 879 0351 66030000 		.4byte	0x366
 880 0355 14       		.uleb128 0x14
 881 0356 BC010000 		.4byte	.LASF37
 882 035a 01       		.byte	0x1
 883 035b 0601     		.2byte	0x106
 884 035d 6B000000 		.4byte	0x6b
 885 0361 72010000 		.4byte	.LLST9
 886 0365 00       		.byte	0
 887 0366 13       		.uleb128 0x13
 888 0367 99020000 		.4byte	.LASF44
 889 036b 01       		.byte	0x1
 890 036c 3801     		.2byte	0x138
 891 036e 6B000000 		.4byte	0x6b
 892 0372 00000000 		.4byte	.LFB4
 893 0376 20000000 		.4byte	.LFE4-.LFB4
 894 037a 01       		.uleb128 0x1
 895 037b 9C       		.byte	0x9c
 896 037c 91030000 		.4byte	0x391
 897 0380 14       		.uleb128 0x14
 898 0381 BC010000 		.4byte	.LASF37
 899 0385 01       		.byte	0x1
 900 0386 3A01     		.2byte	0x13a
 901 0388 6B000000 		.4byte	0x6b
 902 038c 91010000 		.4byte	.LLST10
 903 0390 00       		.byte	0
 904 0391 13       		.uleb128 0x13
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 29


 905 0392 3A010000 		.4byte	.LASF45
 906 0396 01       		.byte	0x1
 907 0397 6C01     		.2byte	0x16c
 908 0399 6B000000 		.4byte	0x6b
 909 039d 00000000 		.4byte	.LFB5
 910 03a1 20000000 		.4byte	.LFE5-.LFB5
 911 03a5 01       		.uleb128 0x1
 912 03a6 9C       		.byte	0x9c
 913 03a7 BC030000 		.4byte	0x3bc
 914 03ab 14       		.uleb128 0x14
 915 03ac BC010000 		.4byte	.LASF37
 916 03b0 01       		.byte	0x1
 917 03b1 6E01     		.2byte	0x16e
 918 03b3 6B000000 		.4byte	0x6b
 919 03b7 B0010000 		.4byte	.LLST11
 920 03bb 00       		.byte	0
 921 03bc 15       		.uleb128 0x15
 922 03bd 39030000 		.4byte	.LASF47
 923 03c1 01       		.byte	0x1
 924 03c2 6E02     		.2byte	0x26e
 925 03c4 00000000 		.4byte	.LFB6
 926 03c8 1C000000 		.4byte	.LFE6-.LFB6
 927 03cc 01       		.uleb128 0x1
 928 03cd 9C       		.byte	0x9c
 929 03ce E3030000 		.4byte	0x3e3
 930 03d2 16       		.uleb128 0x16
 931 03d3 AD020000 		.4byte	.LASF48
 932 03d7 01       		.byte	0x1
 933 03d8 6E02     		.2byte	0x26e
 934 03da 6B000000 		.4byte	0x6b
 935 03de CF010000 		.4byte	.LLST12
 936 03e2 00       		.byte	0
 937 03e3 17       		.uleb128 0x17
 938 03e4 EA000000 		.4byte	.LASF52
 939 03e8 01       		.byte	0x1
 940 03e9 9B02     		.2byte	0x29b
 941 03eb 00000000 		.4byte	.LFB7
 942 03ef 10000000 		.4byte	.LFE7-.LFB7
 943 03f3 01       		.uleb128 0x1
 944 03f4 9C       		.byte	0x9c
 945 03f5 00       		.byte	0
 946              		.section	.debug_abbrev,"",%progbits
 947              	.Ldebug_abbrev0:
 948 0000 01       		.uleb128 0x1
 949 0001 11       		.uleb128 0x11
 950 0002 01       		.byte	0x1
 951 0003 25       		.uleb128 0x25
 952 0004 0E       		.uleb128 0xe
 953 0005 13       		.uleb128 0x13
 954 0006 0B       		.uleb128 0xb
 955 0007 03       		.uleb128 0x3
 956 0008 0E       		.uleb128 0xe
 957 0009 1B       		.uleb128 0x1b
 958 000a 0E       		.uleb128 0xe
 959 000b 55       		.uleb128 0x55
 960 000c 17       		.uleb128 0x17
 961 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 30


 962 000e 01       		.uleb128 0x1
 963 000f 10       		.uleb128 0x10
 964 0010 17       		.uleb128 0x17
 965 0011 00       		.byte	0
 966 0012 00       		.byte	0
 967 0013 02       		.uleb128 0x2
 968 0014 24       		.uleb128 0x24
 969 0015 00       		.byte	0
 970 0016 0B       		.uleb128 0xb
 971 0017 0B       		.uleb128 0xb
 972 0018 3E       		.uleb128 0x3e
 973 0019 0B       		.uleb128 0xb
 974 001a 03       		.uleb128 0x3
 975 001b 0E       		.uleb128 0xe
 976 001c 00       		.byte	0
 977 001d 00       		.byte	0
 978 001e 03       		.uleb128 0x3
 979 001f 24       		.uleb128 0x24
 980 0020 00       		.byte	0
 981 0021 0B       		.uleb128 0xb
 982 0022 0B       		.uleb128 0xb
 983 0023 3E       		.uleb128 0x3e
 984 0024 0B       		.uleb128 0xb
 985 0025 03       		.uleb128 0x3
 986 0026 08       		.uleb128 0x8
 987 0027 00       		.byte	0
 988 0028 00       		.byte	0
 989 0029 04       		.uleb128 0x4
 990 002a 16       		.uleb128 0x16
 991 002b 00       		.byte	0
 992 002c 03       		.uleb128 0x3
 993 002d 0E       		.uleb128 0xe
 994 002e 3A       		.uleb128 0x3a
 995 002f 0B       		.uleb128 0xb
 996 0030 3B       		.uleb128 0x3b
 997 0031 05       		.uleb128 0x5
 998 0032 49       		.uleb128 0x49
 999 0033 13       		.uleb128 0x13
 1000 0034 00       		.byte	0
 1001 0035 00       		.byte	0
 1002 0036 05       		.uleb128 0x5
 1003 0037 35       		.uleb128 0x35
 1004 0038 00       		.byte	0
 1005 0039 49       		.uleb128 0x49
 1006 003a 13       		.uleb128 0x13
 1007 003b 00       		.byte	0
 1008 003c 00       		.byte	0
 1009 003d 06       		.uleb128 0x6
 1010 003e 13       		.uleb128 0x13
 1011 003f 01       		.byte	0x1
 1012 0040 0B       		.uleb128 0xb
 1013 0041 0B       		.uleb128 0xb
 1014 0042 3A       		.uleb128 0x3a
 1015 0043 0B       		.uleb128 0xb
 1016 0044 3B       		.uleb128 0x3b
 1017 0045 0B       		.uleb128 0xb
 1018 0046 01       		.uleb128 0x1
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 31


 1019 0047 13       		.uleb128 0x13
 1020 0048 00       		.byte	0
 1021 0049 00       		.byte	0
 1022 004a 07       		.uleb128 0x7
 1023 004b 0D       		.uleb128 0xd
 1024 004c 00       		.byte	0
 1025 004d 03       		.uleb128 0x3
 1026 004e 0E       		.uleb128 0xe
 1027 004f 3A       		.uleb128 0x3a
 1028 0050 0B       		.uleb128 0xb
 1029 0051 3B       		.uleb128 0x3b
 1030 0052 0B       		.uleb128 0xb
 1031 0053 49       		.uleb128 0x49
 1032 0054 13       		.uleb128 0x13
 1033 0055 38       		.uleb128 0x38
 1034 0056 0B       		.uleb128 0xb
 1035 0057 00       		.byte	0
 1036 0058 00       		.byte	0
 1037 0059 08       		.uleb128 0x8
 1038 005a 01       		.uleb128 0x1
 1039 005b 01       		.byte	0x1
 1040 005c 49       		.uleb128 0x49
 1041 005d 13       		.uleb128 0x13
 1042 005e 01       		.uleb128 0x1
 1043 005f 13       		.uleb128 0x13
 1044 0060 00       		.byte	0
 1045 0061 00       		.byte	0
 1046 0062 09       		.uleb128 0x9
 1047 0063 21       		.uleb128 0x21
 1048 0064 00       		.byte	0
 1049 0065 49       		.uleb128 0x49
 1050 0066 13       		.uleb128 0x13
 1051 0067 2F       		.uleb128 0x2f
 1052 0068 0B       		.uleb128 0xb
 1053 0069 00       		.byte	0
 1054 006a 00       		.byte	0
 1055 006b 0A       		.uleb128 0xa
 1056 006c 16       		.uleb128 0x16
 1057 006d 00       		.byte	0
 1058 006e 03       		.uleb128 0x3
 1059 006f 0E       		.uleb128 0xe
 1060 0070 3A       		.uleb128 0x3a
 1061 0071 0B       		.uleb128 0xb
 1062 0072 3B       		.uleb128 0x3b
 1063 0073 0B       		.uleb128 0xb
 1064 0074 49       		.uleb128 0x49
 1065 0075 13       		.uleb128 0x13
 1066 0076 00       		.byte	0
 1067 0077 00       		.byte	0
 1068 0078 0B       		.uleb128 0xb
 1069 0079 0D       		.uleb128 0xd
 1070 007a 00       		.byte	0
 1071 007b 03       		.uleb128 0x3
 1072 007c 08       		.uleb128 0x8
 1073 007d 3A       		.uleb128 0x3a
 1074 007e 0B       		.uleb128 0xb
 1075 007f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 32


 1076 0080 0B       		.uleb128 0xb
 1077 0081 49       		.uleb128 0x49
 1078 0082 13       		.uleb128 0x13
 1079 0083 38       		.uleb128 0x38
 1080 0084 0B       		.uleb128 0xb
 1081 0085 00       		.byte	0
 1082 0086 00       		.byte	0
 1083 0087 0C       		.uleb128 0xc
 1084 0088 0F       		.uleb128 0xf
 1085 0089 00       		.byte	0
 1086 008a 0B       		.uleb128 0xb
 1087 008b 0B       		.uleb128 0xb
 1088 008c 49       		.uleb128 0x49
 1089 008d 13       		.uleb128 0x13
 1090 008e 00       		.byte	0
 1091 008f 00       		.byte	0
 1092 0090 0D       		.uleb128 0xd
 1093 0091 2E       		.uleb128 0x2e
 1094 0092 01       		.byte	0x1
 1095 0093 3F       		.uleb128 0x3f
 1096 0094 19       		.uleb128 0x19
 1097 0095 03       		.uleb128 0x3
 1098 0096 0E       		.uleb128 0xe
 1099 0097 3A       		.uleb128 0x3a
 1100 0098 0B       		.uleb128 0xb
 1101 0099 3B       		.uleb128 0x3b
 1102 009a 0B       		.uleb128 0xb
 1103 009b 27       		.uleb128 0x27
 1104 009c 19       		.uleb128 0x19
 1105 009d 49       		.uleb128 0x49
 1106 009e 13       		.uleb128 0x13
 1107 009f 11       		.uleb128 0x11
 1108 00a0 01       		.uleb128 0x1
 1109 00a1 12       		.uleb128 0x12
 1110 00a2 06       		.uleb128 0x6
 1111 00a3 40       		.uleb128 0x40
 1112 00a4 18       		.uleb128 0x18
 1113 00a5 9742     		.uleb128 0x2117
 1114 00a7 19       		.uleb128 0x19
 1115 00a8 01       		.uleb128 0x1
 1116 00a9 13       		.uleb128 0x13
 1117 00aa 00       		.byte	0
 1118 00ab 00       		.byte	0
 1119 00ac 0E       		.uleb128 0xe
 1120 00ad 05       		.uleb128 0x5
 1121 00ae 00       		.byte	0
 1122 00af 03       		.uleb128 0x3
 1123 00b0 0E       		.uleb128 0xe
 1124 00b1 3A       		.uleb128 0x3a
 1125 00b2 0B       		.uleb128 0xb
 1126 00b3 3B       		.uleb128 0x3b
 1127 00b4 0B       		.uleb128 0xb
 1128 00b5 49       		.uleb128 0x49
 1129 00b6 13       		.uleb128 0x13
 1130 00b7 02       		.uleb128 0x2
 1131 00b8 17       		.uleb128 0x17
 1132 00b9 00       		.byte	0
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 33


 1133 00ba 00       		.byte	0
 1134 00bb 0F       		.uleb128 0xf
 1135 00bc 34       		.uleb128 0x34
 1136 00bd 00       		.byte	0
 1137 00be 03       		.uleb128 0x3
 1138 00bf 08       		.uleb128 0x8
 1139 00c0 3A       		.uleb128 0x3a
 1140 00c1 0B       		.uleb128 0xb
 1141 00c2 3B       		.uleb128 0x3b
 1142 00c3 0B       		.uleb128 0xb
 1143 00c4 49       		.uleb128 0x49
 1144 00c5 13       		.uleb128 0x13
 1145 00c6 02       		.uleb128 0x2
 1146 00c7 17       		.uleb128 0x17
 1147 00c8 00       		.byte	0
 1148 00c9 00       		.byte	0
 1149 00ca 10       		.uleb128 0x10
 1150 00cb 34       		.uleb128 0x34
 1151 00cc 00       		.byte	0
 1152 00cd 03       		.uleb128 0x3
 1153 00ce 0E       		.uleb128 0xe
 1154 00cf 3A       		.uleb128 0x3a
 1155 00d0 0B       		.uleb128 0xb
 1156 00d1 3B       		.uleb128 0x3b
 1157 00d2 0B       		.uleb128 0xb
 1158 00d3 49       		.uleb128 0x49
 1159 00d4 13       		.uleb128 0x13
 1160 00d5 02       		.uleb128 0x2
 1161 00d6 17       		.uleb128 0x17
 1162 00d7 00       		.byte	0
 1163 00d8 00       		.byte	0
 1164 00d9 11       		.uleb128 0x11
 1165 00da 26       		.uleb128 0x26
 1166 00db 00       		.byte	0
 1167 00dc 49       		.uleb128 0x49
 1168 00dd 13       		.uleb128 0x13
 1169 00de 00       		.byte	0
 1170 00df 00       		.byte	0
 1171 00e0 12       		.uleb128 0x12
 1172 00e1 2E       		.uleb128 0x2e
 1173 00e2 01       		.byte	0x1
 1174 00e3 3F       		.uleb128 0x3f
 1175 00e4 19       		.uleb128 0x19
 1176 00e5 03       		.uleb128 0x3
 1177 00e6 0E       		.uleb128 0xe
 1178 00e7 3A       		.uleb128 0x3a
 1179 00e8 0B       		.uleb128 0xb
 1180 00e9 3B       		.uleb128 0x3b
 1181 00ea 0B       		.uleb128 0xb
 1182 00eb 27       		.uleb128 0x27
 1183 00ec 19       		.uleb128 0x19
 1184 00ed 11       		.uleb128 0x11
 1185 00ee 01       		.uleb128 0x1
 1186 00ef 12       		.uleb128 0x12
 1187 00f0 06       		.uleb128 0x6
 1188 00f1 40       		.uleb128 0x40
 1189 00f2 18       		.uleb128 0x18
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 34


 1190 00f3 9742     		.uleb128 0x2117
 1191 00f5 19       		.uleb128 0x19
 1192 00f6 01       		.uleb128 0x1
 1193 00f7 13       		.uleb128 0x13
 1194 00f8 00       		.byte	0
 1195 00f9 00       		.byte	0
 1196 00fa 13       		.uleb128 0x13
 1197 00fb 2E       		.uleb128 0x2e
 1198 00fc 01       		.byte	0x1
 1199 00fd 3F       		.uleb128 0x3f
 1200 00fe 19       		.uleb128 0x19
 1201 00ff 03       		.uleb128 0x3
 1202 0100 0E       		.uleb128 0xe
 1203 0101 3A       		.uleb128 0x3a
 1204 0102 0B       		.uleb128 0xb
 1205 0103 3B       		.uleb128 0x3b
 1206 0104 05       		.uleb128 0x5
 1207 0105 27       		.uleb128 0x27
 1208 0106 19       		.uleb128 0x19
 1209 0107 49       		.uleb128 0x49
 1210 0108 13       		.uleb128 0x13
 1211 0109 11       		.uleb128 0x11
 1212 010a 01       		.uleb128 0x1
 1213 010b 12       		.uleb128 0x12
 1214 010c 06       		.uleb128 0x6
 1215 010d 40       		.uleb128 0x40
 1216 010e 18       		.uleb128 0x18
 1217 010f 9742     		.uleb128 0x2117
 1218 0111 19       		.uleb128 0x19
 1219 0112 01       		.uleb128 0x1
 1220 0113 13       		.uleb128 0x13
 1221 0114 00       		.byte	0
 1222 0115 00       		.byte	0
 1223 0116 14       		.uleb128 0x14
 1224 0117 34       		.uleb128 0x34
 1225 0118 00       		.byte	0
 1226 0119 03       		.uleb128 0x3
 1227 011a 0E       		.uleb128 0xe
 1228 011b 3A       		.uleb128 0x3a
 1229 011c 0B       		.uleb128 0xb
 1230 011d 3B       		.uleb128 0x3b
 1231 011e 05       		.uleb128 0x5
 1232 011f 49       		.uleb128 0x49
 1233 0120 13       		.uleb128 0x13
 1234 0121 02       		.uleb128 0x2
 1235 0122 17       		.uleb128 0x17
 1236 0123 00       		.byte	0
 1237 0124 00       		.byte	0
 1238 0125 15       		.uleb128 0x15
 1239 0126 2E       		.uleb128 0x2e
 1240 0127 01       		.byte	0x1
 1241 0128 3F       		.uleb128 0x3f
 1242 0129 19       		.uleb128 0x19
 1243 012a 03       		.uleb128 0x3
 1244 012b 0E       		.uleb128 0xe
 1245 012c 3A       		.uleb128 0x3a
 1246 012d 0B       		.uleb128 0xb
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 35


 1247 012e 3B       		.uleb128 0x3b
 1248 012f 05       		.uleb128 0x5
 1249 0130 27       		.uleb128 0x27
 1250 0131 19       		.uleb128 0x19
 1251 0132 11       		.uleb128 0x11
 1252 0133 01       		.uleb128 0x1
 1253 0134 12       		.uleb128 0x12
 1254 0135 06       		.uleb128 0x6
 1255 0136 40       		.uleb128 0x40
 1256 0137 18       		.uleb128 0x18
 1257 0138 9742     		.uleb128 0x2117
 1258 013a 19       		.uleb128 0x19
 1259 013b 01       		.uleb128 0x1
 1260 013c 13       		.uleb128 0x13
 1261 013d 00       		.byte	0
 1262 013e 00       		.byte	0
 1263 013f 16       		.uleb128 0x16
 1264 0140 05       		.uleb128 0x5
 1265 0141 00       		.byte	0
 1266 0142 03       		.uleb128 0x3
 1267 0143 0E       		.uleb128 0xe
 1268 0144 3A       		.uleb128 0x3a
 1269 0145 0B       		.uleb128 0xb
 1270 0146 3B       		.uleb128 0x3b
 1271 0147 05       		.uleb128 0x5
 1272 0148 49       		.uleb128 0x49
 1273 0149 13       		.uleb128 0x13
 1274 014a 02       		.uleb128 0x2
 1275 014b 17       		.uleb128 0x17
 1276 014c 00       		.byte	0
 1277 014d 00       		.byte	0
 1278 014e 17       		.uleb128 0x17
 1279 014f 2E       		.uleb128 0x2e
 1280 0150 00       		.byte	0
 1281 0151 3F       		.uleb128 0x3f
 1282 0152 19       		.uleb128 0x19
 1283 0153 03       		.uleb128 0x3
 1284 0154 0E       		.uleb128 0xe
 1285 0155 3A       		.uleb128 0x3a
 1286 0156 0B       		.uleb128 0xb
 1287 0157 3B       		.uleb128 0x3b
 1288 0158 05       		.uleb128 0x5
 1289 0159 27       		.uleb128 0x27
 1290 015a 19       		.uleb128 0x19
 1291 015b 11       		.uleb128 0x11
 1292 015c 01       		.uleb128 0x1
 1293 015d 12       		.uleb128 0x12
 1294 015e 06       		.uleb128 0x6
 1295 015f 40       		.uleb128 0x40
 1296 0160 18       		.uleb128 0x18
 1297 0161 9742     		.uleb128 0x2117
 1298 0163 19       		.uleb128 0x19
 1299 0164 00       		.byte	0
 1300 0165 00       		.byte	0
 1301 0166 00       		.byte	0
 1302              		.section	.debug_loc,"",%progbits
 1303              	.Ldebug_loc0:
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 36


 1304              	.LLST0:
 1305 0000 00000000 		.4byte	.LVL0
 1306 0004 CA000000 		.4byte	.LVL24
 1307 0008 0100     		.2byte	0x1
 1308 000a 50       		.byte	0x50
 1309 000b CA000000 		.4byte	.LVL24
 1310 000f DC000000 		.4byte	.LFE0
 1311 0013 0400     		.2byte	0x4
 1312 0015 F3       		.byte	0xf3
 1313 0016 01       		.uleb128 0x1
 1314 0017 50       		.byte	0x50
 1315 0018 9F       		.byte	0x9f
 1316 0019 00000000 		.4byte	0
 1317 001d 00000000 		.4byte	0
 1318              	.LLST1:
 1319 0021 08000000 		.4byte	.LVL2
 1320 0025 B2000000 		.4byte	.LVL18
 1321 0029 0100     		.2byte	0x1
 1322 002b 52       		.byte	0x52
 1323 002c B4000000 		.4byte	.LVL19
 1324 0030 B6000000 		.4byte	.LVL20
 1325 0034 0100     		.2byte	0x1
 1326 0036 52       		.byte	0x52
 1327 0037 BA000000 		.4byte	.LVL21
 1328 003b C4000000 		.4byte	.LVL23
 1329 003f 0100     		.2byte	0x1
 1330 0041 52       		.byte	0x52
 1331 0042 00000000 		.4byte	0
 1332 0046 00000000 		.4byte	0
 1333              	.LLST2:
 1334 004a 5C000000 		.4byte	.LVL10
 1335 004e 60000000 		.4byte	.LVL11
 1336 0052 0200     		.2byte	0x2
 1337 0054 30       		.byte	0x30
 1338 0055 9F       		.byte	0x9f
 1339 0056 60000000 		.4byte	.LVL11
 1340 005a 7E000000 		.4byte	.LVL12
 1341 005e 0100     		.2byte	0x1
 1342 0060 53       		.byte	0x53
 1343 0061 80000000 		.4byte	.LVL13
 1344 0065 90000000 		.4byte	.LVL14
 1345 0069 0100     		.2byte	0x1
 1346 006b 53       		.byte	0x53
 1347 006c 00000000 		.4byte	0
 1348 0070 00000000 		.4byte	0
 1349              	.LLST3:
 1350 0074 08000000 		.4byte	.LVL2
 1351 0078 B6000000 		.4byte	.LVL20
 1352 007c 0100     		.2byte	0x1
 1353 007e 57       		.byte	0x57
 1354 007f BA000000 		.4byte	.LVL21
 1355 0083 C4000000 		.4byte	.LVL23
 1356 0087 0100     		.2byte	0x1
 1357 0089 57       		.byte	0x57
 1358 008a 00000000 		.4byte	0
 1359 008e 00000000 		.4byte	0
 1360              	.LLST4:
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 37


 1361 0092 02000000 		.4byte	.LVL1
 1362 0096 08000000 		.4byte	.LVL2
 1363 009a 0200     		.2byte	0x2
 1364 009c 30       		.byte	0x30
 1365 009d 9F       		.byte	0x9f
 1366 009e 08000000 		.4byte	.LVL2
 1367 00a2 C2000000 		.4byte	.LVL22
 1368 00a6 0100     		.2byte	0x1
 1369 00a8 56       		.byte	0x56
 1370 00a9 C4000000 		.4byte	.LVL23
 1371 00ad CC000000 		.4byte	.LVL25
 1372 00b1 0100     		.2byte	0x1
 1373 00b3 56       		.byte	0x56
 1374 00b4 00000000 		.4byte	0
 1375 00b8 00000000 		.4byte	0
 1376              	.LLST5:
 1377 00bc 02000000 		.4byte	.LVL1
 1378 00c0 08000000 		.4byte	.LVL2
 1379 00c4 0200     		.2byte	0x2
 1380 00c6 31       		.byte	0x31
 1381 00c7 9F       		.byte	0x9f
 1382 00c8 08000000 		.4byte	.LVL2
 1383 00cc 20000000 		.4byte	.LVL5
 1384 00d0 0100     		.2byte	0x1
 1385 00d2 51       		.byte	0x51
 1386 00d3 A8000000 		.4byte	.LVL15
 1387 00d7 AA000000 		.4byte	.LVL16
 1388 00db 0200     		.2byte	0x2
 1389 00dd 30       		.byte	0x30
 1390 00de 9F       		.byte	0x9f
 1391 00df AA000000 		.4byte	.LVL16
 1392 00e3 DC000000 		.4byte	.LFE0
 1393 00e7 0100     		.2byte	0x1
 1394 00e9 51       		.byte	0x51
 1395 00ea 00000000 		.4byte	0
 1396 00ee 00000000 		.4byte	0
 1397              	.LLST6:
 1398 00f2 16000000 		.4byte	.LVL3
 1399 00f6 1E000000 		.4byte	.LVL4
 1400 00fa 0200     		.2byte	0x2
 1401 00fc 30       		.byte	0x30
 1402 00fd 9F       		.byte	0x9f
 1403 00fe 1E000000 		.4byte	.LVL4
 1404 0102 4E000000 		.4byte	.LVL7
 1405 0106 0100     		.2byte	0x1
 1406 0108 53       		.byte	0x53
 1407 0109 4E000000 		.4byte	.LVL7
 1408 010d 50000000 		.4byte	.LVL8
 1409 0111 0100     		.2byte	0x1
 1410 0113 5E       		.byte	0x5e
 1411 0114 50000000 		.4byte	.LVL8
 1412 0118 54000000 		.4byte	.LVL9
 1413 011c 0100     		.2byte	0x1
 1414 011e 53       		.byte	0x53
 1415 011f 54000000 		.4byte	.LVL9
 1416 0123 AA000000 		.4byte	.LVL16
 1417 0127 0100     		.2byte	0x1
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 38


 1418 0129 5E       		.byte	0x5e
 1419 012a 00000000 		.4byte	0
 1420 012e 00000000 		.4byte	0
 1421              	.LLST7:
 1422 0132 00000000 		.4byte	.LVL26
 1423 0136 06000000 		.4byte	.LVL27
 1424 013a 0100     		.2byte	0x1
 1425 013c 50       		.byte	0x50
 1426 013d 06000000 		.4byte	.LVL27
 1427 0141 1C000000 		.4byte	.LFE1
 1428 0145 0400     		.2byte	0x4
 1429 0147 F3       		.byte	0xf3
 1430 0148 01       		.uleb128 0x1
 1431 0149 50       		.byte	0x50
 1432 014a 9F       		.byte	0x9f
 1433 014b 00000000 		.4byte	0
 1434 014f 00000000 		.4byte	0
 1435              	.LLST8:
 1436 0153 00000000 		.4byte	.LVL28
 1437 0157 1A000000 		.4byte	.LVL29
 1438 015b 0200     		.2byte	0x2
 1439 015d 30       		.byte	0x30
 1440 015e 9F       		.byte	0x9f
 1441 015f 1A000000 		.4byte	.LVL29
 1442 0163 20000000 		.4byte	.LFE2
 1443 0167 0100     		.2byte	0x1
 1444 0169 50       		.byte	0x50
 1445 016a 00000000 		.4byte	0
 1446 016e 00000000 		.4byte	0
 1447              	.LLST9:
 1448 0172 00000000 		.4byte	.LVL30
 1449 0176 1A000000 		.4byte	.LVL31
 1450 017a 0200     		.2byte	0x2
 1451 017c 30       		.byte	0x30
 1452 017d 9F       		.byte	0x9f
 1453 017e 1A000000 		.4byte	.LVL31
 1454 0182 20000000 		.4byte	.LFE3
 1455 0186 0100     		.2byte	0x1
 1456 0188 50       		.byte	0x50
 1457 0189 00000000 		.4byte	0
 1458 018d 00000000 		.4byte	0
 1459              	.LLST10:
 1460 0191 00000000 		.4byte	.LVL32
 1461 0195 1A000000 		.4byte	.LVL33
 1462 0199 0200     		.2byte	0x2
 1463 019b 30       		.byte	0x30
 1464 019c 9F       		.byte	0x9f
 1465 019d 1A000000 		.4byte	.LVL33
 1466 01a1 20000000 		.4byte	.LFE4
 1467 01a5 0100     		.2byte	0x1
 1468 01a7 50       		.byte	0x50
 1469 01a8 00000000 		.4byte	0
 1470 01ac 00000000 		.4byte	0
 1471              	.LLST11:
 1472 01b0 00000000 		.4byte	.LVL34
 1473 01b4 1A000000 		.4byte	.LVL35
 1474 01b8 0200     		.2byte	0x2
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 39


 1475 01ba 30       		.byte	0x30
 1476 01bb 9F       		.byte	0x9f
 1477 01bc 1A000000 		.4byte	.LVL35
 1478 01c0 20000000 		.4byte	.LFE5
 1479 01c4 0100     		.2byte	0x1
 1480 01c6 50       		.byte	0x50
 1481 01c7 00000000 		.4byte	0
 1482 01cb 00000000 		.4byte	0
 1483              	.LLST12:
 1484 01cf 00000000 		.4byte	.LVL36
 1485 01d3 02000000 		.4byte	.LVL37
 1486 01d7 0100     		.2byte	0x1
 1487 01d9 50       		.byte	0x50
 1488 01da 02000000 		.4byte	.LVL37
 1489 01de 1C000000 		.4byte	.LFE6
 1490 01e2 0400     		.2byte	0x4
 1491 01e4 F3       		.byte	0xf3
 1492 01e5 01       		.uleb128 0x1
 1493 01e6 50       		.byte	0x50
 1494 01e7 9F       		.byte	0x9f
 1495 01e8 00000000 		.4byte	0
 1496 01ec 00000000 		.4byte	0
 1497              		.section	.debug_aranges,"",%progbits
 1498 0000 54000000 		.4byte	0x54
 1499 0004 0200     		.2byte	0x2
 1500 0006 00000000 		.4byte	.Ldebug_info0
 1501 000a 04       		.byte	0x4
 1502 000b 00       		.byte	0
 1503 000c 0000     		.2byte	0
 1504 000e 0000     		.2byte	0
 1505 0010 00000000 		.4byte	.LFB0
 1506 0014 DC000000 		.4byte	.LFE0-.LFB0
 1507 0018 00000000 		.4byte	.LFB1
 1508 001c 1C000000 		.4byte	.LFE1-.LFB1
 1509 0020 00000000 		.4byte	.LFB2
 1510 0024 20000000 		.4byte	.LFE2-.LFB2
 1511 0028 00000000 		.4byte	.LFB3
 1512 002c 20000000 		.4byte	.LFE3-.LFB3
 1513 0030 00000000 		.4byte	.LFB4
 1514 0034 20000000 		.4byte	.LFE4-.LFB4
 1515 0038 00000000 		.4byte	.LFB5
 1516 003c 20000000 		.4byte	.LFE5-.LFB5
 1517 0040 00000000 		.4byte	.LFB6
 1518 0044 1C000000 		.4byte	.LFE6-.LFB6
 1519 0048 00000000 		.4byte	.LFB7
 1520 004c 10000000 		.4byte	.LFE7-.LFB7
 1521 0050 00000000 		.4byte	0
 1522 0054 00000000 		.4byte	0
 1523              		.section	.debug_ranges,"",%progbits
 1524              	.Ldebug_ranges0:
 1525 0000 00000000 		.4byte	.LFB0
 1526 0004 DC000000 		.4byte	.LFE0
 1527 0008 00000000 		.4byte	.LFB1
 1528 000c 1C000000 		.4byte	.LFE1
 1529 0010 00000000 		.4byte	.LFB2
 1530 0014 20000000 		.4byte	.LFE2
 1531 0018 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 40


 1532 001c 20000000 		.4byte	.LFE3
 1533 0020 00000000 		.4byte	.LFB4
 1534 0024 20000000 		.4byte	.LFE4
 1535 0028 00000000 		.4byte	.LFB5
 1536 002c 20000000 		.4byte	.LFE5
 1537 0030 00000000 		.4byte	.LFB6
 1538 0034 1C000000 		.4byte	.LFE6
 1539 0038 00000000 		.4byte	.LFB7
 1540 003c 10000000 		.4byte	.LFE7
 1541 0040 00000000 		.4byte	0
 1542 0044 00000000 		.4byte	0
 1543              		.section	.debug_line,"",%progbits
 1544              	.Ldebug_line0:
 1545 0000 6B010000 		.section	.debug_str,"MS",%progbits,1
 1545      02005400 
 1545      00000201 
 1545      FB0E0D00 
 1545      01010101 
 1546              	.LASF39:
 1547 0000 6D657373 		.ascii	"message\000"
 1547      61676500 
 1548              	.LASF35:
 1549 0008 73686966 		.ascii	"shift\000"
 1549      7400
 1550              	.LASF20:
 1551 000e 43414E5F 		.ascii	"CAN_DATA_BYTES\000"
 1551      44415441 
 1551      5F425954 
 1551      455300
 1552              	.LASF32:
 1553 001d 74786964 		.ascii	"txid\000"
 1553      00
 1554              	.LASF26:
 1555 0022 7278616D 		.ascii	"rxamr\000"
 1555      7200
 1556              	.LASF21:
 1557 0028 43414E5F 		.ascii	"CAN_REG_32\000"
 1557      5245475F 
 1557      333200
 1558              	.LASF3:
 1559 0033 73686F72 		.ascii	"short unsigned int\000"
 1559      7420756E 
 1559      7369676E 
 1559      65642069 
 1559      6E7400
 1560              	.LASF31:
 1561 0046 7478636D 		.ascii	"txcmd\000"
 1561      6400
 1562              	.LASF13:
 1563 004c 63686172 		.ascii	"char\000"
 1563      00
 1564              	.LASF50:
 1565 0051 47656E65 		.ascii	"Generated_Source\\PSoC5\\CAN_TX_RX_func.c\000"
 1565      72617465 
 1565      645F536F 
 1565      75726365 
 1565      5C50536F 
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 41


 1566              	.LASF19:
 1567 0079 62797465 		.ascii	"byte\000"
 1567      00
 1568              	.LASF25:
 1569 007e 72786461 		.ascii	"rxdata\000"
 1569      746100
 1570              	.LASF29:
 1571 0085 72786163 		.ascii	"rxacrd\000"
 1571      726400
 1572              	.LASF42:
 1573 008c 43414E5F 		.ascii	"CAN_SendMsgTORQUE_REQUEST_COMMAND\000"
 1573      53656E64 
 1573      4D736754 
 1573      4F525155 
 1573      455F5245 
 1574              	.LASF11:
 1575 00ae 666C6F61 		.ascii	"float\000"
 1575      7400
 1576              	.LASF22:
 1577 00b4 43414E5F 		.ascii	"CAN_TX_MSG\000"
 1577      54585F4D 
 1577      534700
 1578              	.LASF41:
 1579 00bf 43414E5F 		.ascii	"CAN_SendMsg\000"
 1579      53656E64 
 1579      4D736700 
 1580              	.LASF1:
 1581 00cb 756E7369 		.ascii	"unsigned char\000"
 1581      676E6564 
 1581      20636861 
 1581      7200
 1582              	.LASF15:
 1583 00d9 72656733 		.ascii	"reg32\000"
 1583      3200
 1584              	.LASF36:
 1585 00df 72657472 		.ascii	"retry\000"
 1585      7900
 1586              	.LASF14:
 1587 00e5 72656738 		.ascii	"reg8\000"
 1587      00
 1588              	.LASF52:
 1589 00ea 43414E5F 		.ascii	"CAN_ReceiveMsgTorque_Request_Command\000"
 1589      52656365 
 1589      6976654D 
 1589      7367546F 
 1589      72717565 
 1590              	.LASF5:
 1591 010f 6C6F6E67 		.ascii	"long unsigned int\000"
 1591      20756E73 
 1591      69676E65 
 1591      6420696E 
 1591      7400
 1592              	.LASF9:
 1593 0121 75696E74 		.ascii	"uint8\000"
 1593      3800
 1594              	.LASF18:
 1595 0127 43414E5F 		.ascii	"CAN_DATA_BYTES_MSG\000"
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 42


 1595      44415441 
 1595      5F425954 
 1595      45535F4D 
 1595      534700
 1596              	.LASF45:
 1597 013a 43414E5F 		.ascii	"CAN_SendMsgMC_DEBUG\000"
 1597      53656E64 
 1597      4D73674D 
 1597      435F4445 
 1597      42554700 
 1598              	.LASF34:
 1599 014e 43414E5F 		.ascii	"CAN_TX_STRUCT\000"
 1599      54585F53 
 1599      54525543 
 1599      5400
 1600              	.LASF12:
 1601 015c 646F7562 		.ascii	"double\000"
 1601      6C6500
 1602              	.LASF38:
 1603 0163 72656754 		.ascii	"regTemp\000"
 1603      656D7000 
 1604              	.LASF2:
 1605 016b 73686F72 		.ascii	"short int\000"
 1605      7420696E 
 1605      7400
 1606              	.LASF24:
 1607 0175 72786964 		.ascii	"rxid\000"
 1607      00
 1608              	.LASF10:
 1609 017a 75696E74 		.ascii	"uint32\000"
 1609      333200
 1610              	.LASF8:
 1611 0181 756E7369 		.ascii	"unsigned int\000"
 1611      676E6564 
 1611      20696E74 
 1611      00
 1612              	.LASF7:
 1613 018e 6C6F6E67 		.ascii	"long long unsigned int\000"
 1613      206C6F6E 
 1613      6720756E 
 1613      7369676E 
 1613      65642069 
 1614              	.LASF43:
 1615 01a5 43414E5F 		.ascii	"CAN_SendMsgPEI_CURRENT\000"
 1615      53656E64 
 1615      4D736750 
 1615      45495F43 
 1615      55525245 
 1616              	.LASF37:
 1617 01bc 72657375 		.ascii	"result\000"
 1617      6C7400
 1618              	.LASF46:
 1619 01c3 43414E5F 		.ascii	"CAN_TxCancel\000"
 1619      54784361 
 1619      6E63656C 
 1619      00
 1620              	.LASF30:
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 43


 1621 01d0 43414E5F 		.ascii	"CAN_RX_STRUCT\000"
 1621      52585F53 
 1621      54525543 
 1621      5400
 1622              	.LASF23:
 1623 01de 7278636D 		.ascii	"rxcmd\000"
 1623      6400
 1624              	.LASF49:
 1625 01e4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1625      43313120 
 1625      352E342E 
 1625      31203230 
 1625      31363036 
 1626 0217 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1626      20726576 
 1626      6973696F 
 1626      6E203233 
 1626      37373135 
 1627 024a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1627      66756E63 
 1627      74696F6E 
 1627      2D736563 
 1627      74696F6E 
 1628              	.LASF17:
 1629 0272 73697A65 		.ascii	"sizetype\000"
 1629      74797065 
 1629      00
 1630              	.LASF28:
 1631 027b 7278616D 		.ascii	"rxamrd\000"
 1631      726400
 1632              	.LASF6:
 1633 0282 6C6F6E67 		.ascii	"long long int\000"
 1633      206C6F6E 
 1633      6720696E 
 1633      7400
 1634              	.LASF40:
 1635 0290 62756666 		.ascii	"bufferId\000"
 1635      65724964 
 1635      00
 1636              	.LASF44:
 1637 0299 43414E5F 		.ascii	"CAN_SendMsgMC_ESTOP\000"
 1637      53656E64 
 1637      4D73674D 
 1637      435F4553 
 1637      544F5000 
 1638              	.LASF48:
 1639 02ad 72784D61 		.ascii	"rxMailbox\000"
 1639      696C626F 
 1639      7800
 1640              	.LASF27:
 1641 02b7 72786163 		.ascii	"rxacr\000"
 1641      7200
 1642              	.LASF51:
 1643 02bd 433A5C55 		.ascii	"C:\\Users\\kendr\\OneDrive\\Documents\\PEI-Firmware"
 1643      73657273 
 1643      5C6B656E 
 1643      64725C4F 
ARM GAS  C:\Users\kendr\AppData\Local\Temp\ccMG46Jq.s 			page 44


 1643      6E654472 
 1644 02eb 2D464531 		.ascii	"-FE10\\PSOC_VCU_Example\\Design01.cydsn\000"
 1644      305C5053 
 1644      4F435F56 
 1644      43555F45 
 1644      78616D70 
 1645              	.LASF4:
 1646 0311 6C6F6E67 		.ascii	"long int\000"
 1646      20696E74 
 1646      00
 1647              	.LASF16:
 1648 031a 6C6F6E67 		.ascii	"long double\000"
 1648      20646F75 
 1648      626C6500 
 1649              	.LASF0:
 1650 0326 7369676E 		.ascii	"signed char\000"
 1650      65642063 
 1650      68617200 
 1651              	.LASF33:
 1652 0332 74786461 		.ascii	"txdata\000"
 1652      746100
 1653              	.LASF47:
 1654 0339 43414E5F 		.ascii	"CAN_ReceiveMsg\000"
 1654      52656365 
 1654      6976654D 
 1654      736700
 1655              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
